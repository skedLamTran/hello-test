import "core-js/modules/es.string.fixed.js";
import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef } from 'react';
import { styleDefenderCSS } from '@looker/components-providers';
import { createPortal } from 'react-dom';
import styled from 'styled-components';
import { useSafeLayoutEffect } from '../utils';
var rootId = 'modal-root';
export var getPortalRoot = function getPortalRoot() {
  var existing = document.getElementById(rootId);

  if (existing) {
    return existing;
  } else {
    var newElement = document.createElement('div');
    newElement.id = 'modal-root';
    document.body.appendChild(newElement);
    return newElement;
  }
};
export var Portal = forwardRef(function (props, ref) {
  var el = useRef(document.createElement('div'));
  el.current.className = 'portal-child';
  useSafeLayoutEffect(function () {
    var root = getPortalRoot();
    if (!root) return;
    var elCurrent = el.current;
    root.appendChild(elCurrent);
    return function () {
      root.removeChild(elCurrent);
    };
  }, [el]);
  var content = React.createElement(InvisiBox, _extends({
    ref: ref
  }, props));
  return createPortal(content, el.current);
});
Portal.displayName = 'Portal';

var alignItems = function alignItems(_ref) {
  var vertical = _ref.vertical;

  if (vertical === 'top') {
    return 'flex-start';
  } else if (vertical === 'bottom') {
    return 'flex-end';
  } else {
    return 'center';
  }
};

var justifyContent = function justifyContent(_ref2) {
  var horizontal = _ref2.horizontal;

  if (horizontal === 'left') {
    return 'flex-start';
  } else if (horizontal === 'right') {
    return 'flex-end';
  } else {
    return 'center';
  }
};

var InvisiBox = styled.div.attrs(function (_ref3) {
  var _ref3$className = _ref3.className,
      className = _ref3$className === void 0 ? 'looker-components-reset' : _ref3$className;
  return {
    className: className
  };
}).withConfig({
  displayName: "Portal__InvisiBox",
  componentId: "sc-8jnv99-0"
})(["", " align-items:", ";bottom:0;display:flex;justify-content:", ";left:0;pointer-events:none;position:", ";right:0;top:0;z-index:", ";> *{pointer-events:auto;}"], styleDefenderCSS, alignItems, justifyContent, function (_ref4) {
  var fixed = _ref4.fixed;
  return fixed === false ? 'absolute' : 'fixed';
}, function (_ref5) {
  var zIndexFloor = _ref5.theme.zIndexFloor;
  return zIndexFloor;
});
//# sourceMappingURL=Portal.js.map