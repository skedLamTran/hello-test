var _excluded = ["color", "user", "role", "size"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { useTranslation } from 'react-i18next';
import React from 'react';
import styled from 'styled-components';
import { omitStyledProps, shouldForwardProp } from '@looker/design-tokens';
import { avatarCSS } from './Avatar';

var AvatarLayout = function AvatarLayout(_ref) {
  var color = _ref.color,
      user = _ref.user,
      role = _ref.role,
      size = _ref.size,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useTranslation = useTranslation('AvatarUser'),
      t = _useTranslation.t;

  var firstInitial = user && user.first_name && user.first_name[0];
  var lastInitial = user && user.last_name && user.last_name[0];
  var name = user ? "".concat(user.first_name, " ").concat(user.last_name) : t('Avatar');
  var BaseElement = role === 'button' ? 'button' : 'div';
  return React.createElement(BaseElement, _extends({}, omitStyledProps(props), {
    "aria-label": name
  }), React.createElement(AvatarInitials, {
    color: color,
    "aria-hidden": true
  }, size === 'xxsmall' ? "".concat(firstInitial) : "".concat(firstInitial).concat(lastInitial)), user && user.avatar_url && React.createElement(AvatarPhoto, {
    "aria-hidden": true,
    "data-testid": "avatar-photo",
    color: color,
    type: "image/png",
    data: user.avatar_url
  }));
};

var AvatarPhoto = styled.object.withConfig({
  displayName: "AvatarUser__AvatarPhoto",
  componentId: "sc-ds3q2d-0"
})(["bottom:0;height:100%;left:0;position:absolute;right:0;top:0;width:100%;"]);
var AvatarInitials = styled.div.withConfig({
  shouldForwardProp: shouldForwardProp
}).attrs(function (_ref2) {
  var color = _ref2.color;
  return {
    bg: color
  };
}).withConfig({
  displayName: "AvatarUser__AvatarInitials",
  componentId: "sc-ds3q2d-1"
})(["color:", ";"], function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.keyText;
});
export var AvatarUser = styled(AvatarLayout).attrs(function (_ref4) {
  var _ref4$color = _ref4.color,
      color = _ref4$color === void 0 ? 'key' : _ref4$color,
      _ref4$size = _ref4.size,
      size = _ref4$size === void 0 ? 'small' : _ref4$size;
  return {
    color: color,
    size: size
  };
}).withConfig({
  displayName: "AvatarUser",
  componentId: "sc-ds3q2d-2"
})(["", " ", " background:currentColor;position:relative;"], avatarCSS, function (_ref5) {
  var role = _ref5.role;
  return role === 'button' && 'cursor: pointer;';
});
//# sourceMappingURL=AvatarUser.js.map