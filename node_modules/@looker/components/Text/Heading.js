import styled from 'styled-components';
import { textTransform } from '@looker/design-tokens';
import { TextBase } from './TextBase';
import { truncateCSS } from './truncate';

var headingLevelFontSize = function headingLevelFontSize(as) {
  switch (as) {
    case 'h1':
      return 'xxlarge';

    case 'h3':
      return 'large';

    case 'h4':
      return 'medium';

    case 'h5':
      return 'small';

    case 'h6':
      return 'xsmall';

    case 'h2':
    default:
      return 'xlarge';
  }
};

var headingLineHeight = function headingLineHeight(as, fontSize) {
  return fontSize || headingLevelFontSize(as);
};

export var Heading = styled(TextBase).attrs(function (_ref) {
  var _ref$as = _ref.as,
      as = _ref$as === void 0 ? 'h2' : _ref$as,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'title' : _ref$color,
      _ref$fontFamily = _ref.fontFamily,
      fontFamily = _ref$fontFamily === void 0 ? 'brand' : _ref$fontFamily,
      fontSize = _ref.fontSize,
      _ref$fontWeight = _ref.fontWeight,
      fontWeight = _ref$fontWeight === void 0 ? 'normal' : _ref$fontWeight,
      lineHeight = _ref.lineHeight;
  return {
    as: as,
    color: color,
    fontFamily: fontFamily,
    fontSize: fontSize || headingLevelFontSize(as),
    fontWeight: fontWeight,
    lineHeight: lineHeight || headingLineHeight(as, fontSize)
  };
}).withConfig({
  displayName: "Heading",
  componentId: "sc-63s0tz-0"
})(["", " ", ""], textTransform, truncateCSS);
//# sourceMappingURL=Heading.js.map