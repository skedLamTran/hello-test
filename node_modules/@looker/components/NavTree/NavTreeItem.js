var _excluded = ["truncate"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import "core-js/modules/es.array.includes.js";
import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";
import React, { useContext } from 'react';
import styled, { ThemeContext } from 'styled-components';
import { generateIndentCalculation } from '../Tree/utils/generateIndent';
import { TreeContext } from '../Tree/TreeContext';
import { ListItemDetail, listItemDimensions } from '../ListItem';
import { TreeItem } from '../Tree';
import { accordionDimensions } from '../Accordion2/accordionDimensions';
import { TreeItemContent } from '../Tree/TreeItemContent';
import { INDICATOR_SPACER } from './NavTree';
var IndentOverrideTreeItem = styled(TreeItem).withConfig({
  shouldForwardProp: function shouldForwardProp(prop) {
    return !['depth', 'density', 'iconGap', 'indicatorGap', 'parentIcon', 'px'].includes(prop);
  }
}).withConfig({
  displayName: "NavTreeItem__IndentOverrideTreeItem",
  componentId: "sc-1yihvfy-0"
})(["", "{", "}", "{padding-right:", ";}"], TreeItemContent, function (_ref) {
  var _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 0 : _ref$depth,
      density = _ref.density,
      iconGap = _ref.iconGap,
      indicatorGap = _ref.indicatorGap,
      parentIcon = _ref.parentIcon,
      theme = _ref.theme;
  return "padding-left: calc(".concat(generateIndentCalculation(parentIcon ? depth + 1 : depth, density || theme.defaults.density, theme), " + ").concat(theme.space[iconGap], " - ").concat(theme.space[indicatorGap], " + ").concat(INDICATOR_SPACER, ");");
}, ListItemDetail, function (_ref2) {
  var px = _ref2.px,
      theme = _ref2.theme;
  return theme.space[px];
});
export var NavTreeItem = styled(function (_ref3) {
  var _ref3$truncate = _ref3.truncate,
      truncate = _ref3$truncate === void 0 ? true : _ref3$truncate,
      props = _objectWithoutProperties(_ref3, _excluded);

  var theme = useContext(ThemeContext);

  var _useContext = useContext(TreeContext),
      depth = _useContext.depth;

  var _listItemDimensions = listItemDimensions(theme.defaults.density),
      iconGap = _listItemDimensions.iconGap,
      px = _listItemDimensions.px;

  var _accordionDimensions = accordionDimensions(),
      indicatorGap = _accordionDimensions.indicatorGap;

  return React.createElement(IndentOverrideTreeItem, _extends({
    depth: depth,
    iconGap: iconGap,
    indicatorGap: indicatorGap,
    itemRole: props.href ? 'link' : props.itemRole,
    px: px,
    truncate: truncate
  }, props));
}).withConfig({
  displayName: "NavTreeItem",
  componentId: "sc-1yihvfy-1"
})([""]);
//# sourceMappingURL=NavTreeItem.js.map