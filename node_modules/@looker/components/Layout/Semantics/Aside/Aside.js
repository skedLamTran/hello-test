import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.is-array.js";
import "core-js/modules/es.symbol.description.js";
import "core-js/modules/es.object.to-string.js";
import "core-js/modules/es.symbol.iterator.js";
import "core-js/modules/es.array.iterator.js";
import "core-js/modules/es.string.iterator.js";
import "core-js/modules/web.dom-collections.iterator.js";
import "core-js/modules/es.array.slice.js";
import "core-js/modules/es.function.name.js";
import "core-js/modules/es.array.from.js";
import "core-js/modules/es.object.assign.js";
var _excluded = ["collapse", "children"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import { shouldForwardProp as _shouldForwardProp } from '@looker/design-tokens';
import styled from 'styled-components';
import { OverflowShadow, useOverflow } from '../../../utils';
import { commonLayoutCSS } from '../../utils/common';
import { asideWidth } from './asideWidth';
var AsideLayout = forwardRef(function (_ref, forwardedRef) {
  var collapse = _ref.collapse,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useOverflow = useOverflow(forwardedRef),
      _useOverflow2 = _slicedToArray(_useOverflow, 2),
      hasOverflow = _useOverflow2[0],
      ref = _useOverflow2[1];

  return collapse ? null : React.createElement(OverflowShadow, _extends({
    as: "aside",
    hasOverflow: hasOverflow,
    ref: ref
  }, props), children);
});
AsideLayout.displayName = 'AsideLayout';
export var Aside = styled(AsideLayout).withConfig({
  shouldForwardProp: function shouldForwardProp(prop) {
    return prop === 'collapse' || _shouldForwardProp(prop);
  }
}).attrs(function (_ref2) {
  var _ref2$width = _ref2.width,
      width = _ref2$width === void 0 ? 'sidebar' : _ref2$width;
  return {
    width: width
  };
}).withConfig({
  displayName: "Aside",
  componentId: "sc-1t83syr-0"
})(["", " flex:0 0 ", ";max-width:", ";min-width:", ";overflow:auto;width:0;", " ", ""], commonLayoutCSS, function (_ref3) {
  var width = _ref3.width;
  return width;
}, function (_ref4) {
  var width = _ref4.width;
  return width;
}, function (_ref5) {
  var width = _ref5.width;
  return width;
}, function (_ref6) {
  var scrollWithin = _ref6.scrollWithin;
  return scrollWithin && 'height: fit-content;';
}, asideWidth);
//# sourceMappingURL=Aside.js.map