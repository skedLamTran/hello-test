import "core-js/modules/es.array.map.js";
import { css } from 'styled-components';
import { borderRadius } from '@looker/design-tokens';

var borderPropertyHelper = function borderPropertyHelper(color, property) {
  return css(["", ":1px solid ", ";"], property, function (_ref) {
    var theme = _ref.theme;
    return theme.colors[color] || color;
  });
};

var borderPositionHelper = function borderPositionHelper(border, position) {
  var color = border === true ? 'ui2' : border;
  if (color === 'none' || !color) return null;
  var properties = [];

  switch (position) {
    case 'x':
      properties = ['border-left', 'border-right'];
      break;

    case 'y':
      properties = ['border-bottom', 'border-top'];
      break;

    case undefined:
      return css(["", ""], borderPropertyHelper(color, 'border'));

    default:
      properties = ["border-".concat(position)];
  }

  return css(["", ""], properties.map(function (property) {
    return borderPropertyHelper(color, property);
  }));
};

export var borderHelper = function borderHelper(_ref2) {
  var border = _ref2.border,
      borderBottom = _ref2.borderBottom,
      borderLeft = _ref2.borderLeft,
      borderRight = _ref2.borderRight,
      borderTop = _ref2.borderTop,
      borderX = _ref2.borderX,
      borderY = _ref2.borderY;
  return css(["", " ", " ", " ", " ", " ", " ", " ", ""], border && borderPositionHelper(border), borderBottom && borderPositionHelper(borderBottom, 'bottom'), borderLeft && borderPositionHelper(borderLeft, 'left'), borderRight && borderPositionHelper(borderRight, 'right'), borderTop && borderPositionHelper(borderTop, 'top'), borderX && borderPositionHelper(borderX, 'x'), borderY && borderPositionHelper(borderY, 'y'), borderRadius);
};
//# sourceMappingURL=semanticBorderHelper.js.map