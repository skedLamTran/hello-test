import "core-js/modules/es.array.reverse.js";
import styled, { css } from 'styled-components';
import { flexbox, shouldForwardProp, variant } from '@looker/design-tokens';
import { commonLayoutCSS } from '../utils/common';
export var defaultGap = 'u4';
export var spaceCSS = css(["", " ", " display:flex;"], commonLayoutCSS, flexbox);

var fauxGap = function fauxGap(_ref) {
  var _ref$gap = _ref.gap,
      gap = _ref$gap === void 0 ? defaultGap : _ref$gap,
      reverse = _ref.reverse;
  return css(["&& > *{margin-right:", ";}", ""], function (_ref2) {
    var space = _ref2.theme.space;
    return space[gap];
  }, function (_ref3) {
    var space = _ref3.theme.space;
    return reverse ? "&& > *:first-child { margin-right: ".concat(space.none, "; }") : "&& > *:last-child { margin-right: ".concat(space.none, "; }");
  });
};

var flexGap = function flexGap(_ref4) {
  var _ref4$gap = _ref4.gap,
      gap = _ref4$gap === void 0 ? defaultGap : _ref4$gap,
      reverse = _ref4.reverse;
  return css(["@supports (-moz-appearance:none){gap:0 ", ";}@supports not (-moz-appearance:none){", "}@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){", "}"], function (_ref5) {
    var space = _ref5.theme.space;
    return space[gap];
  }, fauxGap({
    gap: gap,
    reverse: reverse
  }), fauxGap({
    gap: gap,
    reverse: reverse
  }));
};

var verticalAlign = variant({
  prop: 'align',
  variants: {
    center: {
      alignItems: 'center'
    },
    end: {
      alignItems: 'flex-end'
    },
    start: {
      alignItems: 'flex-start'
    }
  }
});
var justify = variant({
  prop: 'justify',
  variants: {
    center: {
      justifyContent: 'center'
    },
    end: {
      justifyContent: 'flex-end'
    },
    start: {
      justifyContent: 'flex-start'
    }
  }
});
export var Space = styled.div.withConfig({
  shouldForwardProp: shouldForwardProp
}).attrs(function (_ref6) {
  var _ref6$alignItems = _ref6.alignItems,
      alignItems = _ref6$alignItems === void 0 ? 'center' : _ref6$alignItems,
      _ref6$width = _ref6.width,
      width = _ref6$width === void 0 ? '100%' : _ref6$width;
  return {
    alignItems: alignItems,
    width: width
  };
}).withConfig({
  displayName: "Space",
  componentId: "sc-zsz5hl-0"
})(["", " ", " ", " flex-direction:", ";", " ", " ", " ", ""], spaceCSS, function (_ref7) {
  var stretch = _ref7.stretch;
  return !stretch && verticalAlign;
}, function (_ref8) {
  var stretch = _ref8.stretch;
  return !stretch && justify;
}, function (_ref9) {
  var reverse = _ref9.reverse;
  return reverse ? 'row-reverse' : 'row';
}, function (_ref10) {
  var around = _ref10.around;
  return around && 'justify-content: space-around;';
}, function (_ref11) {
  var between = _ref11.between;
  return between && 'justify-content: space-between;';
}, function (_ref12) {
  var evenly = _ref12.evenly;
  return evenly && 'justify-content: space-evenly;';
}, function (_ref13) {
  var around = _ref13.around,
      between = _ref13.between,
      evenly = _ref13.evenly;
  return !around && !between && !evenly && flexGap;
});
//# sourceMappingURL=Space.js.map