function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import "core-js/modules/es.array.map.js";
import "core-js/modules/es.object.assign.js";
import React, { cloneElement, createContext, isValidElement, useCallback, useContext } from 'react';
import { TreeCollectionContext } from './TreeCollectionContext';
export var WindowedTreeContext = createContext({
  partialRender: false
});
export var WindowedTreeNode = function WindowedTreeNode(_ref) {
  var content = _ref.content,
      firstIDinWindow = _ref.firstIDinWindow,
      id = _ref.id,
      items = _ref.items;
  var context = useContext(TreeCollectionContext);
  var toggleNode = useCallback(function (isOpen) {
    var _context$toggleNode;

    (_context$toggleNode = context.toggleNode) === null || _context$toggleNode === void 0 ? void 0 : _context$toggleNode.call(context, id, isOpen);
  }, [context, id]);

  if (items && isValidElement(content)) {
    var _context$toggleStateM, _context$toggleStateM2;

    var props = {
      children: items.map(function (item) {
        return React.createElement(WindowedTreeNode, _extends({
          firstIDinWindow: firstIDinWindow
        }, item, {
          key: item.id
        }));
      })
    };

    var _isOpen = (_context$toggleStateM = context.toggleStateMap) === null || _context$toggleStateM === void 0 ? void 0 : (_context$toggleStateM2 = _context$toggleStateM[id]) === null || _context$toggleStateM2 === void 0 ? void 0 : _context$toggleStateM2.isOpen;

    return React.createElement(WindowedTreeContext.Provider, {
      value: {
        density: context.density,
        isOpen: _isOpen,
        partialRender: firstIDinWindow ? id < firstIDinWindow : false,
        toggleNode: toggleNode
      }
    }, cloneElement(content, props));
  }

  return content;
};
//# sourceMappingURL=WindowedTreeNode.js.map