import "core-js/modules/es.number.constructor.js";
import { useTranslation } from 'react-i18next';
import React, { useContext } from 'react';
import styled from 'styled-components';
import { ArrowDropDown } from '@styled-icons/material/ArrowDropDown';
import { Button, ButtonTransparent } from '../../Button';
import { Space } from '../../Layout';
import { Menu } from '../../Menu';
import { Span } from '../../Text';
import { DataTableContext } from '../DataTableContext';

var BulkActionsLayout = function BulkActionsLayout(_ref) {
  var actions = _ref.actions,
      className = _ref.className,
      onTotalClearAll = _ref.onTotalClearAll,
      onTotalSelectAll = _ref.onTotalSelectAll,
      pageCount = _ref.pageCount,
      totalCount = _ref.totalCount;

  var _useTranslation = useTranslation('BulkActions'),
      t = _useTranslation.t;

  var _useContext = useContext(DataTableContext),
      select = _useContext.select;

  var selectedItemCount = select ? select.selectedItems.length : 0;
  var message;

  if (selectedItemCount < pageCount) {
    message = t('SelectedCountOfTotalDisplayed', {
      pageCount: Number(pageCount),
      selectedItemCount: Number(selectedItemCount)
    });
  } else if (selectedItemCount === pageCount) {
    message = t('AllPageCountDisplayedSelected', {
      pageCount: Number(pageCount)
    });
  } else if (totalCount && selectedItemCount === totalCount) {
    message = t('AllTotalCountSelected', {
      totalCount: Number(totalCount)
    });
  }

  var selectedItemsText = React.createElement(Span, {
    color: "text2",
    fontSize: "xsmall"
  }, message);
  var selectTotalResultsButton = React.createElement(ButtonTransparent, {
    onClick: selectedItemCount === totalCount ? onTotalClearAll : onTotalSelectAll
  }, React.createElement(Span, {
    fontWeight: "semiBold",
    fontSize: "xsmall"
  }, selectedItemCount === totalCount ? t('Clear Selection') : t('SelectAllCountResults', {
    totalCount: Number(totalCount)
  })));
  return React.createElement("div", {
    className: className
  }, React.createElement(Menu, {
    content: actions
  }, React.createElement(Button, {
    iconAfter: React.createElement(ArrowDropDown, null),
    size: "xsmall"
  }, t('Bulk Actions'))), React.createElement(Space, {
    gap: "u3",
    justifyContent: "center"
  }, selectedItemsText, selectTotalResultsButton));
};

export var BulkActions = styled(BulkActionsLayout).withConfig({
  displayName: "BulkActions",
  componentId: "sc-z1cplu-0"
})(["align-items:center;background-color:", ";border-bottom:solid 1px ", ";display:flex;height:3.25rem;justify-content:center;position:relative;", "{left:", ";position:absolute;}"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.colors.ui1;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.ui2;
}, Button, function (_ref4) {
  var theme = _ref4.theme;
  return theme.space.u3;
});
//# sourceMappingURL=BulkActions.js.map