import "core-js/modules/es.array.includes.js";
import { variant } from '@looker/design-tokens';
import { css } from 'styled-components';
export var sizeInfersTruncate = function sizeInfersTruncate(size) {
  return size && typeof size !== 'number' && !['auto', 'nowrap'].includes(size);
};
var columnSizeVariants = variant({
  prop: 'size',
  variants: {
    small: {
      maxWidth: '3rem',
      minWidth: '3rem'
    },
    medium: {
      maxWidth: '12rem',
      minWidth: '12rem'
    },
    large: {
      maxWidth: '20rem',
      minWidth: '20rem'
    },
    nowrap: {
      whiteSpace: 'nowrap'
    }
  }
});

var percentWidth = function percentWidth(width) {
  return "width: ".concat(width, "%;");
};

export var columnSize = css(["", ""], function (_ref) {
  var size = _ref.size;
  return size && typeof size === 'number' ? percentWidth(size) : columnSizeVariants;
});
//# sourceMappingURL=columnSize.js.map