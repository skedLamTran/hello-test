import "core-js/modules/es.array.includes.js";
import "core-js/modules/es.string.includes.js";
import React, { useContext, useRef } from 'react';
import { useTranslation } from 'react-i18next';
import styled from 'styled-components';
import { MoreVert } from '@styled-icons/material/MoreVert';
import { IconButton } from '../../Button';
import { Menu } from '../../Menu';
import { DataTableContext } from '../DataTableContext';
import { DataTableRow } from './DataTableRow';
import { ItemTarget, ItemTargetGroup } from './ItemTarget';

var DataTableItemLayout = function DataTableItemLayout(props) {
  var _useTranslation = useTranslation('DataTableItem'),
      t = _useTranslation.t;

  var actionsTooltipText = t('Options');
  var actions = props.actions,
      _props$actionsTooltip = props.actionsTooltip,
      actionsTooltip = _props$actionsTooltip === void 0 ? actionsTooltipText : _props$actionsTooltip,
      children = props.children,
      className = props.className,
      disabled = props.disabled,
      id = props.id,
      onClick = props.onClick,
      actionPrimary = props.actionPrimary;
  var ref = useRef(null);

  var _useContext = useContext(DataTableContext),
      select = _useContext.select;

  var handleClick = disabled ? undefined : onClick || undefined;
  var ItemActions = (actionPrimary || actions) && React.createElement(ItemTargetGroup, null, actionPrimary && React.createElement(ItemTarget, null, actionPrimary), actions && React.createElement(ItemTarget, null, React.createElement(Menu, {
    content: actions
  }, React.createElement(IconButton, {
    icon: React.createElement(MoreVert, null),
    label: actionsTooltip,
    size: "small",
    tabIndex: -1
  }))));
  var onChange = select ? function () {
    return select.onSelect(id);
  } : undefined;
  var checked = select && select.selectedItems.includes(id);
  return React.createElement(DataTableRow, {
    checked: checked,
    className: className,
    disabled: disabled,
    hasCheckbox: !!select,
    id: id,
    onChange: onChange,
    onClick: handleClick,
    ref: ref,
    secondary: ItemActions,
    tabIndex: 0
  }, children);
};

export var DataTableItem = styled(DataTableItemLayout).withConfig({
  displayName: "DataTableItem",
  componentId: "sc-5zp8q0-0"
})([""]);
//# sourceMappingURL=DataTableItem.js.map