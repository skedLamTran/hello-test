import "core-js/modules/es.string.small.js";
import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.array.is-array.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.symbol.description.js";
import "core-js/modules/es.object.to-string.js";
import "core-js/modules/es.symbol.iterator.js";
import "core-js/modules/es.array.iterator.js";
import "core-js/modules/es.string.iterator.js";
import "core-js/modules/web.dom-collections.iterator.js";
import "core-js/modules/es.array.slice.js";
import "core-js/modules/es.function.name.js";
import "core-js/modules/es.array.from.js";
import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import { useTranslation } from 'react-i18next';
import { densityTarget } from '@looker/design-tokens';
import React from 'react';
import styled, { css } from 'styled-components';
import { Spinner } from '../Spinner';
import { Heading } from '../Text';
import { useArrowKeyNav, useCallbackRef, useIsTruncated } from '../utils';
import { getNumericColumnIndices, numericColumnCSS } from './utils/dataTableFormatting';
import { DataTableHeader } from './Header/DataTableHeader';
import { edgeShadow } from './utils/edgeShadow';
import { getNextFocus } from './getNextFocus';
export var TableLayout = function TableLayout(props) {
  var _useTranslation = useTranslation('DataTable'),
      t = _useTranslation.t;

  var noResultsDisplayText = t('No Results');
  var caption = props.caption,
      children = props.children,
      className = props.className,
      columnsVisible = props.columnsVisible,
      headerRowId = props.headerRowId,
      _props$noResultsDispl = props.noResultsDisplay,
      noResultsDisplay = _props$noResultsDispl === void 0 ? noResultsDisplayText : _props$noResultsDispl,
      state = props.state;

  var _useCallbackRef = useCallbackRef(),
      _useCallbackRef2 = _slicedToArray(_useCallbackRef, 2),
      element = _useCallbackRef2[0],
      ref = _useCallbackRef2[1];

  var overflow = useIsTruncated(element, columnsVisible.length);
  var noResultsContent = typeof noResultsDisplay === 'string' ? React.createElement(Heading, {
    color: "text1"
  }, noResultsDisplay) : noResultsDisplay;
  var interimState = state && React.createElement(InterimState, null, state === 'loading' ? React.createElement(Spinner, null) : noResultsContent);
  var navProps = useArrowKeyNav({
    axis: 'both',
    getNextFocus: getNextFocus
  });
  return React.createElement(React.Fragment, null, React.createElement(TableScroll, {
    ref: ref
  }, React.createElement("table", _extends({
    "aria-label": caption,
    className: overflow ? "".concat(className, " overflow") : className
  }, navProps), React.createElement("thead", null, React.createElement(DataTableHeader, {
    id: headerRowId
  })), !interimState && React.createElement("tbody", null, children))), interimState);
};
var selectColumn = css(["", ""], function (_ref) {
  var select = _ref.select;
  return select ? css(["&:first-child{max-width:", ";min-width:", ";width:", ";}&:nth-child(2){padding-left:", ";}"], densityTarget, densityTarget, densityTarget, function (_ref2) {
    var theme = _ref2.theme;
    return theme.space.u2;
  }) : css(["&:first-child{max-width:0;min-width:0;}"]);
});
var actionsColumn = css(["&:last-child{padding:0;width:100%;}"]);
var stickyColumns = css(["", " ", " &:last-child{", " position:sticky;right:0;}"], function (_ref3) {
  var select = _ref3.select,
      firstColumnStuck = _ref3.firstColumnStuck;
  return (select || firstColumnStuck) && css(["&:first-child{left:0;position:sticky;", "}"], firstColumnStuck === false && edgeShadow());
}, function (_ref4) {
  var select = _ref4.select,
      firstColumnStuck = _ref4.firstColumnStuck;
  return firstColumnStuck && css(["&:nth-child(2){left:", ";position:sticky;", "}"], select ? densityTarget : 0, edgeShadow());
}, edgeShadow('right'));
export var Table = styled(TableLayout).withConfig({
  displayName: "Table",
  componentId: "sc-tf9jqn-0"
})(["border-collapse:initial;border-spacing:0;font-family:", ";font-size:", ";line-height:1;width:100%;td,th{height:", ";padding:", ";:first-child,:last-child{padding:0;}", " ", "}tbody td{color:", ";}&.overflow{tr{td,th{", " height:initial;}}}", ""], function (_ref5) {
  var theme = _ref5.theme;
  return theme.fonts.body;
}, function (_ref6) {
  var theme = _ref6.theme;
  return theme.fontSizes.small;
}, densityTarget, function (_ref7) {
  var space = _ref7.theme.space;
  return "".concat(space.u2, "  ").concat(space.u4);
}, selectColumn, actionsColumn, function (_ref8) {
  var theme = _ref8.theme;
  return theme.colors.text4;
}, stickyColumns, function (_ref9) {
  var columns = _ref9.columns,
      columnsVisible = _ref9.columnsVisible;
  return numericColumnCSS(getNumericColumnIndices(columns, columnsVisible));
});
var InterimState = styled.div.withConfig({
  displayName: "Table__InterimState",
  componentId: "sc-tf9jqn-1"
})(["align-items:center;display:flex;justify-content:center;padding:", ";"], function (_ref10) {
  var theme = _ref10.theme;
  return theme.space.u8;
});
export var TableScroll = styled.div.withConfig({
  displayName: "Table__TableScroll",
  componentId: "sc-tf9jqn-2"
})(["overflow-x:auto;"]);
//# sourceMappingURL=Table.js.map