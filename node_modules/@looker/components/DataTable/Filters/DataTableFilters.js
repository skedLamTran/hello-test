var _excluded = ["className", "children"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import "core-js/modules/es.array.find.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import styled from 'styled-components';
import React from 'react';
import { densityTarget } from '@looker/design-tokens';
import { DividerVertical } from '../../Divider';
import { InputFilters } from '../../Form/Inputs/InputFilters';
import { ItemTarget } from '../Item/ItemTarget';
import { ColumnSelector } from './ColumnSelector';

var hasSelectableColumns = function hasSelectableColumns(columns) {
  return Boolean(columns.find(function (c) {
    return c.hide !== undefined;
  }));
};

var DataTableFiltersLayout = function DataTableFiltersLayout(_ref) {
  var className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);

  var columnsSelector = React.createElement(React.Fragment, null, React.createElement(DividerVertical, {
    mx: "none",
    stretch: true
  }), React.createElement(ItemTarget, null, React.createElement(ColumnSelector, props)));
  return React.createElement("div", {
    className: className
  }, children, hasSelectableColumns(props.columns) && columnsSelector);
};

export var DataTableFilters = styled(DataTableFiltersLayout).withConfig({
  displayName: "DataTableFilters",
  componentId: "sc-1p8hllh-0"
})(["align-items:flex-start;border-bottom:solid 1px ", ";border-top:solid 1px ", ";display:flex;", "{border:none;}", "{min-height:calc(", " - 2px);}"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.colors.ui2;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.ui2;
}, InputFilters, ItemTarget, densityTarget);
//# sourceMappingURL=DataTableFilters.js.map