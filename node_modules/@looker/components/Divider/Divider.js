import { color, position, reset, space, shouldForwardProp, variant } from '@looker/design-tokens';
import styled from 'styled-components';
var appearanceVariant = variant({
  prop: 'appearance',
  variants: {
    dark: {
      bg: 'ui4'
    },
    "default": {
      bg: 'ui3'
    },
    light: {
      bg: 'ui2'
    },
    onDark: {
      bg: 'text2'
    }
  }
});
export var DividerBase = styled.hr.withConfig({
  shouldForwardProp: shouldForwardProp
}).attrs(function (_ref) {
  var _ref$appearance = _ref.appearance,
      appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,
      customColor = _ref.customColor,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? '1px' : _ref$size;
  return {
    appearance: appearance,
    bg: customColor,
    size: size
  };
}).withConfig({
  displayName: "Divider__DividerBase",
  componentId: "sc-1ceogl5-0"
})(["", " ", " border:none;margin:0;", " ", ""], reset, position, space, function (_ref2) {
  var customColor = _ref2.customColor;
  return customColor ? color : appearanceVariant;
});
export var Divider = styled(DividerBase).withConfig({
  displayName: "Divider",
  componentId: "sc-1ceogl5-1"
})(["height:", ";width:100%;"], function (_ref3) {
  var size = _ref3.size;
  return size;
});
//# sourceMappingURL=Divider.js.map