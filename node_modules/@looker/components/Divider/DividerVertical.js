import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import styled from 'styled-components';
import { space } from '@looker/design-tokens';
import { DividerBase } from './Divider';
export var DividerVertical = styled(DividerBase).attrs(function (props) {
  if (props.height && props.stretch) {
    console.warn('When using DividerVertical, the props height and stretch are incompatible. The stretch value will be discarded');
  }

  var _props$height = props.height,
      height = _props$height === void 0 ? '1rem' : _props$height,
      _props$mx = props.mx,
      mx = _props$mx === void 0 ? 'xsmall' : _props$mx,
      _props$my = props.my,
      my = _props$my === void 0 ? 'xsmall' : _props$my;
  return _objectSpread(_objectSpread({}, props), {}, {
    height: height,
    mx: mx,
    my: my
  });
}).withConfig({
  displayName: "DividerVertical",
  componentId: "sc-10179s7-0"
})(["", " display:inline-block;width:", ";", ""], space, function (_ref) {
  var size = _ref.size;
  return size;
}, function (_ref2) {
  var height = _ref2.height,
      stretch = _ref2.stretch;
  return stretch ? "align-self: stretch;" : "height: ".concat(height, ";");
});
//# sourceMappingURL=DividerVertical.js.map