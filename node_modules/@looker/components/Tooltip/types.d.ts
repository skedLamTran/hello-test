import type { CompatibleHTMLProps, Transitions } from '@looker/design-tokens';
import type { Placement } from '@popperjs/core';
import type { Property } from 'csstype';
import type { ReactElement, ReactNode, Ref } from 'react';
import type { MenuDomProps } from '../Menu';
export declare type TooltipRenderProp = (props: UseTooltipResponseDom) => ReactNode;
export interface UseTooltipProps {
    canClose?: () => boolean;
    isOpen?: boolean;
    placement?: Placement;
    content?: ReactNode;
    width?: string;
    maxWidth?: string;
    textAlign?: Property.TextAlign;
    id?: string;
    invert?: boolean;
    triggerElement?: HTMLElement | null;
    disabled?: boolean;
    delay?: Transitions;
}
declare type UseTooltipCallbacks = Required<Pick<CompatibleHTMLProps<HTMLElement>, 'onBlur' | 'onFocus' | 'onMouseOut' | 'onMouseOver'>>;
export declare type UseTooltipResponseDom = UseTooltipCallbacks & Pick<CompatibleHTMLProps<HTMLElement>, 'aria-describedby' | 'className'> & {
    ref: Ref<any>;
};
export interface TooltipProps extends UseTooltipProps, Partial<MenuDomProps> {
    content: ReactNode;
    children: ReactElement<UseTooltipResponseDom & MenuDomProps> | TooltipRenderProp;
}
export {};
