import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { space } from '@looker/design-tokens';
import { Divider } from '../Divider';

var ListDividerLayout = function ListDividerLayout(props) {
  return React.createElement("li", _extends({}, props, {
    "aria-hidden": "true"
  }), React.createElement(Divider, {
    appearance: "light"
  }));
};

export var ListDivider = styled(ListDividerLayout).withConfig({
  displayName: "ListDivider",
  componentId: "sc-y85nke-0"
})(["", " margin:", " 0;& + &{display:none;}"], space, function (_ref) {
  var theme = _ref.theme;
  return theme.space.u2;
});
//# sourceMappingURL=ListDivider.js.map