var _excluded = ["children", "color", "density", "disabled", "disableKeyboardNav", "height", "iconGutter", "onBlur", "onFocus", "onKeyDown", "role", "windowing"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import "core-js/modules/es.symbol.js";
import "core-js/modules/es.symbol.description.js";
import "core-js/modules/es.array.slice.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.object.assign.js";
import React, { Children, forwardRef, isValidElement, useContext, useMemo } from 'react';
import { fontFamily, height, shouldForwardProp, width } from '@looker/design-tokens';
import styled, { ThemeContext } from 'styled-components';
import { useArrowKeyNav, useWindow } from '../utils';
import { ListItemContext, listItemDimensions } from '../ListItem';
import { getNextItemFocus } from './utils';

var getListItemHeight = function getListItemHeight(child, height) {
  if (isValidElement(child) && child.props.description) {
    return height + 16;
  }

  return height;
};

export var ListInternal = forwardRef(function (_ref, forwardedRef) {
  var children = _ref.children,
      color = _ref.color,
      density = _ref.density,
      disabled = _ref.disabled,
      disableKeyboardNav = _ref.disableKeyboardNav,
      height = _ref.height,
      _ref$iconGutter = _ref.iconGutter,
      iconGutter = _ref$iconGutter === void 0 ? false : _ref$iconGutter,
      onBlur = _ref.onBlur,
      onFocus = _ref.onFocus,
      onKeyDown = _ref.onKeyDown,
      role = _ref.role,
      windowing = _ref.windowing,
      props = _objectWithoutProperties(_ref, _excluded);

  var childArray = useMemo(function () {
    return Children.toArray(children);
  }, [children]);
  var theme = useContext(ThemeContext);
  var itemDimensions = listItemDimensions(density || theme.defaults.density);

  if (windowing === undefined) {
    windowing = childArray.length > 100;
  }

  if (height === undefined && windowing) {
    height = '100%';
  }

  var _useWindow = useWindow({
    enabled: windowing,
    itemCount: childArray.length,
    itemHeight: childArray[0] ? getListItemHeight(childArray[0], itemDimensions.height) : 0,
    ref: forwardedRef,
    spacerTag: 'li'
  }),
      after = _useWindow.after,
      before = _useWindow.before,
      end = _useWindow.end,
      start = _useWindow.start,
      ref = _useWindow.ref;

  var content = windowing ? React.createElement(React.Fragment, null, before, childArray.slice(start, end + 1), after) : childArray;
  var navProps = useArrowKeyNav({
    axis: 'both',
    disabled: disableKeyboardNav,
    getNextFocus: getNextItemFocus,
    onBlur: onBlur,
    onFocus: onFocus,
    onKeyDown: onKeyDown,
    ref: ref
  });
  var context = {
    color: color,
    density: density,
    iconGutter: iconGutter
  };
  return React.createElement(ListItemContext.Provider, {
    value: context
  }, React.createElement(ListStyle, _extends({
    role: role || 'list',
    height: height,
    windowing: windowing
  }, props, navProps), content));
});
var ListStyle = styled.ul.withConfig({
  shouldForwardProp: shouldForwardProp
}).attrs(function (_ref2) {
  var _ref2$fontFamily = _ref2.fontFamily,
      fontFamily = _ref2$fontFamily === void 0 ? 'inherit' : _ref2$fontFamily;
  return {
    fontFamily: fontFamily
  };
}).withConfig({
  displayName: "List__ListStyle",
  componentId: "sc-q1s69i-0"
})(["", " ", " ", " list-style:none;margin:0;", " padding:0;"], fontFamily, height, width, function (_ref3) {
  var windowing = _ref3.windowing;
  return windowing && 'overflow: auto;';
});
export var List = styled(ListInternal).withConfig({
  displayName: "List",
  componentId: "sc-q1s69i-1"
})([""]);
//# sourceMappingURL=List.js.map