import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { reset, omitStyledProps } from '@looker/design-tokens';
import React, { useContext, useRef } from 'react';
import styled, { css } from 'styled-components';
import { useGlobalHotkeys } from '../utils';
import { DialogContext } from './DialogContext';

var SurfaceLayout = function SurfaceLayout(props) {
  var _useContext = useContext(DialogContext),
      closeModal = _useContext.closeModal;

  var ref = useRef(null);
  useGlobalHotkeys('esc', closeModal, ref);
  return React.createElement("div", _extends({
    "data-overlay-surface": true,
    ref: ref,
    tabIndex: -1
  }, omitStyledProps(props)));
};

export var surfaceTransition = function surfaceTransition() {
  return css(["", ""], function (_ref) {
    var theme = _ref.theme;
    return "".concat(theme.transitions.moderate, "ms ").concat(theme.easings.ease);
  });
};
export var SurfaceBase = styled(SurfaceLayout).attrs(function () {
  return {
    'aria-modal': true,
    role: 'dialog'
  };
}).withConfig({
  displayName: "SurfaceBase",
  componentId: "sc-7dy58h-0"
})(["", " background:", ";color:", ";display:flex;flex-direction:column;&:focus{outline:none;}"], reset, function (_ref2) {
  var theme = _ref2.theme;
  return theme.colors.background;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.text;
});
//# sourceMappingURL=SurfaceBase.js.map