import React from 'react';
import { ModalLayout, ModalLoading } from '../../Modal/ModalLayout';
import { DialogContent } from './DialogContent';
import { DialogFooter } from './DialogFooter';
import { DialogHeader } from './DialogHeader';

var constructDialogHeader = function constructDialogHeader(children, closeButton, detail, footerExists) {
  if (!children) return null;
  var props = {
    children: children
  };

  if (detail) {
    props.detail = detail;
  } else if (closeButton || footerExists) {
    props.hideClose = !closeButton;
  }

  return React.createElement(DialogHeader, props);
};

export var DialogLayout = function DialogLayout(_ref) {
  var children = _ref.children,
      footer = _ref.footer,
      footerSecondary = _ref.footerSecondary,
      header = _ref.header,
      _ref$headerCloseButto = _ref.headerCloseButton,
      headerCloseButton = _ref$headerCloseButto === void 0 ? !footer && true : _ref$headerCloseButto,
      headerDetail = _ref.headerDetail,
      isLoading = _ref.isLoading;
  var dialogFooter = footer ? React.createElement(DialogFooter, {
    secondary: footerSecondary
  }, footer) : null;
  var dialogHeader = constructDialogHeader(header, headerCloseButton, headerDetail, !!footer);
  return React.createElement(ModalLayout, {
    footer: dialogFooter,
    header: dialogHeader
  }, React.createElement(DialogContent, {
    hasFooter: !!footer,
    hasHeader: !!header
  }, isLoading ? React.createElement(ModalLoading, null) : children));
};
//# sourceMappingURL=DialogLayout.js.map