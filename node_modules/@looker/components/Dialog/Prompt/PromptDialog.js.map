{"version":3,"sources":["../../../src/Dialog/Prompt/PromptDialog.tsx"],"names":["useTranslation","React","useState","useCallback","useEffect","Button","ButtonTransparent","Label","InputText","VisuallyHidden","Dialog","DialogLayout","PromptDialog","props","t","cancelLabelText","saveLabelText","cancelColor","cancelLabel","clearOnCancel","close","defaultValue","isOpen","inputLabel","onSave","onCancel","saveLabel","secondary","title","value","setValue","hasValue","trim","handleClose","onChange","event","currentTarget","onSubmit","cancel","onKeyDown","key","footer"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { useTranslation } from 'react-i18next'\nimport type { FC, FormEvent, KeyboardEvent, ReactNode } from 'react'\nimport React, { useState, useCallback, useEffect } from 'react'\nimport type { StatefulColor } from '@looker/design-tokens'\nimport { Button, ButtonTransparent } from '../../Button'\nimport { Label, InputText } from '../../Form'\nimport { VisuallyHidden } from '../../VisuallyHidden'\nimport { Dialog, DialogLayout } from '..'\n\nexport type PromptCallback = (close: () => void) => void\n\nexport interface PromptBaseProps {\n  /**\n   * Cancel button text\n   * @default Cancel\n   */\n  cancelLabel?: string\n  /**\n   * Defines the color of the cancel button. Can be the string name of a color listed in the color theme, or a color object.\n   * @default neutral\n   */\n  cancelColor?: StatefulColor\n  /**\n   * Callback if user clicks Cancel button or closes the dialog\n   */\n  onCancel?: (close: () => void) => void\n  /**\n   * Callback that is triggered when submit button is pressed\n   */\n  onSave: (value: string, close: () => void) => void\n  /**\n   * Label for the rendered input.\n   * Rendered as placeholder and visually hidden label for screenreaders.\n   */\n  inputLabel: string\n  /**\n   * Title of the dialog\n   */\n  title: string\n  /**\n   * Default value of the rendered input\n   */\n  defaultValue?: string\n  /**\n   * Text of the submit button\n   */\n  saveLabel?: string\n  /**\n   * A React Element that is placed at the bottom left of the dialog\n   */\n  secondary?: ReactNode\n  /**\n   * clearOnCancel\n   * @default false\n   */\n  clearOnCancel?: boolean\n}\n\nexport interface PromptDialogProps extends PromptBaseProps {\n  /**\n   * For triggering close from within the dialog\n   */\n  close: () => void\n  /**\n   * Toggling this after mounting will trigger the animation\n   * @default false\n   */\n  isOpen?: boolean\n}\n\nexport const PromptDialog: FC<PromptDialogProps> = props => {\n  const { t } = useTranslation('PromptDialog')\n  const cancelLabelText = t('Cancel')\n  const saveLabelText = t('Save')\n  const {\n    cancelColor = 'neutral',\n    cancelLabel = cancelLabelText,\n    clearOnCancel,\n    close,\n    defaultValue = '',\n    isOpen,\n    inputLabel,\n    onSave,\n    onCancel,\n    saveLabel = saveLabelText,\n    secondary,\n    title,\n  } = props\n  const [value, setValue] = useState(defaultValue)\n  const hasValue = !!value.trim()\n\n  useEffect(() => {\n    setValue(defaultValue)\n  }, [defaultValue])\n\n  const handleClose = useCallback(() => {\n    close()\n  }, [close])\n\n  const onChange = (event: FormEvent<HTMLInputElement>) => {\n    setValue(event.currentTarget.value)\n  }\n\n  const onSubmit = useCallback(() => {\n    onSave(value, handleClose)\n  }, [handleClose, onSave, value])\n\n  const cancel = useCallback(() => {\n    if (onCancel) {\n      onCancel(handleClose)\n    } else {\n      handleClose()\n    }\n\n    clearOnCancel && setValue('')\n  }, [clearOnCancel, handleClose, onCancel])\n\n  const onKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter' && hasValue) {\n      onSubmit()\n    } else if (event.key === 'Escape') {\n      cancel()\n    }\n  }\n\n  const footer = (\n    <>\n      <Button disabled={!hasValue} type=\"submit\" onClick={onSubmit} color=\"key\">\n        {saveLabel}\n      </Button>\n      <ButtonTransparent type=\"reset\" color={cancelColor} onClick={cancel}>\n        {cancelLabel}\n      </ButtonTransparent>\n    </>\n  )\n\n  return (\n    <Dialog width=\"30rem\" isOpen={isOpen} onClose={cancel}>\n      <DialogLayout header={title} footer={footer} footerSecondary={secondary}>\n        <VisuallyHidden>\n          <Label htmlFor=\"promptInput\">{inputLabel}</Label>\n        </VisuallyHidden>\n        <InputText\n          autoFocus\n          onKeyDown={onKeyDown}\n          id=\"promptInput\"\n          placeholder={inputLabel}\n          onChange={onChange}\n          width=\"100%\"\n          value={value}\n        />\n      </DialogLayout>\n    </Dialog>\n  )\n}\n"],"file":"PromptDialog.js"}