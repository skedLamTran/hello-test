var _excluded = ["children", "indicator", "indicatorPosition"];
import "core-js/modules/es.array.includes.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { shouldForwardProp as _shouldForwardProp } from '@looker/design-tokens';
import { focusVisibleCSSWrapper } from '../utils';
import { AccordionLabel } from './AccordionLabel';
var Accordion2DisclosureInternal = forwardRef(function (_ref, ref) {
  var children = _ref.children,
      indicator = _ref.indicator,
      indicatorPosition = _ref.indicatorPosition,
      props = _objectWithoutProperties(_ref, _excluded);

  return React.createElement("div", _extends({
    ref: ref
  }, props), indicatorPosition === 'left' && indicator, React.createElement(AccordionLabel, null, children), indicatorPosition !== 'left' && indicator);
});
Accordion2DisclosureInternal.displayName = 'Accordion2DisclosureInternal';
var labelTypographyDefaults = css(["font-weight:", ";text-align:left;"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.fontWeights.semiBold;
});
export var Accordion2Disclosure = styled(Accordion2DisclosureInternal).withConfig({
  shouldForwardProp: function shouldForwardProp(prop) {
    return ['indicator', 'indicatorPosition'].includes(prop) ? true : _shouldForwardProp(prop);
  }
}).withConfig({
  displayName: "Accordion2Disclosure",
  componentId: "sc-n100ke-0"
})(["align-items:center;color:", ";cursor:pointer;display:flex;outline:none;position:relative;width:100%;", " &[disabled]{color:", ";cursor:not-allowed;}", ""], function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.text5;
}, labelTypographyDefaults, function (_ref4) {
  var theme = _ref4.theme;
  return theme.colors.text1;
}, focusVisibleCSSWrapper(function (_ref5) {
  var theme = _ref5.theme;
  return css(["box-shadow:inset 0 0 0 2px ", ";"], theme.colors.keyFocus);
}));
//# sourceMappingURL=Accordion2Disclosure.js.map