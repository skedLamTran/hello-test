import type { ReactElement } from 'react';
import type { CompatibleHTMLProps, FontSizeProps, LayoutProps, PaddingProps, TypographyProps } from '@looker/design-tokens';
export declare type Tab2Props<IDType extends string = string> = Omit<CompatibleHTMLProps<HTMLButtonElement>, 'type'> & LayoutProps & PaddingProps & TypographyProps & {
    label: IDType;
    onSelect?: () => void;
    selected?: boolean;
};
export declare type TabList2Props = PaddingProps & FontSizeProps & {
    children: JSX.Element[];
    className?: string;
    distribute?: boolean;
};
declare type TabStackMember<IDType extends string = string> = Tab2Props<IDType> & {
    id: IDType;
};
export declare type TabStack<IDType extends string = string> = TabStackMember<IDType>[];
declare type Controlled<IDType extends string = string> = {
    tabId: IDType;
    onTabChange: (tabId: IDType) => void;
    defaultTabId?: never;
};
declare type Uncontrolled = {
    defaultTabId?: string;
    tabId?: never;
    onTabChange?: never;
};
export declare type Tabs2Props<IDType extends string = string> = (Controlled<IDType> | Uncontrolled) & {
    children: ReactElement<Tab2Props<IDType>> | ReactElement<Tab2Props<IDType>>[];
    distributed?: boolean;
};
export {};
