import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";
var _excluded = ["title", "icon"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { color, omitStyledProps } from '@looker/design-tokens';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { simpleLayoutCSS } from '../Layout/utils/simple';
var IconLayout = forwardRef(function (_ref, ref) {
  var title = _ref.title,
      icon = _ref.icon,
      props = _objectWithoutProperties(_ref, _excluded);

  return React.createElement("div", _extends({
    "aria-hidden": title === undefined && true,
    title: title,
    ref: ref,
    role: "img"
  }, omitStyledProps(props)), icon);
});
IconLayout.displayName = 'IconLayout';
export var Icon = styled(IconLayout).attrs(function (_ref2) {
  var _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? 'medium' : _ref2$size;
  return {
    size: size
  };
}).withConfig({
  displayName: "Icon",
  componentId: "sc-7y0t4i-0"
})(["", " ", " flex-shrink:0;justify-content:center;svg{height:100%;vertical-align:initial;width:100%;}"], simpleLayoutCSS, color);
//# sourceMappingURL=Icon.js.map