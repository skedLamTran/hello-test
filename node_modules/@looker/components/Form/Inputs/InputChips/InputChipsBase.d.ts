import type { FormEvent } from 'react';
import React from 'react';
import type { MaxHeightProps } from '@looker/design-tokens';
import type { InputTextBaseProps } from '../InputText';
export interface InputChipsInputControlProps {
    inputValue: string;
    onInputChange: (value: string, event?: FormEvent<HTMLInputElement>) => void;
    isVisibleOptions?: boolean;
    showCaret?: boolean;
}
export declare const joinValues: (selectedValues: string[]) => string;
export interface InputChipsControlProps {
    values: string[];
    onChange: (values: string[]) => void;
    formatTextToCopy?: (values: string[]) => string;
    onClear?: () => void;
}
export interface InputChipsCommonProps extends Omit<InputTextBaseProps, 'defaultValue' | 'onChange'>, MaxHeightProps {
    formatChip?: (value: string) => string;
    chipIconLabel?: string;
    clearIconLabel?: string;
    isClearable?: boolean;
    inputReadOnly?: boolean;
    removeOnBackspace?: boolean;
    summary?: string;
}
export interface InputChipsBaseProps extends InputChipsCommonProps, InputChipsControlProps, InputChipsInputControlProps {
}
export declare const InputChipsBaseInternal: React.ForwardRefExoticComponent<InputChipsBaseProps & InputChipsInputControlProps & React.RefAttributes<HTMLInputElement>>;
export declare const InputChipsBase: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<InputChipsBaseProps & InputChipsInputControlProps & React.RefAttributes<HTMLInputElement>>, import("styled-components").DefaultTheme, {}, never>;
