{"version":3,"sources":["../../../../../src/Form/Inputs/Select/utils/useWindowedOptions.tsx"],"names":["findIndex","React","useContext","useEffect","useMemo","useRef","getWindowedListBoundaries","ComboboxContext","ComboboxMultiContext","optionHeight","useShouldWindowOptions","flatOptions","propsWindowedOptions","length","useWindowedOptions","windowing","navigationOptions","isMulti","context","contextMulti","contextToUse","navigationOption","data","listClientRect","listScrollPosition","isScrollingRef","optionsRef","current","containerHeight","height","enabled","itemCount","itemHeight","scrollPosition","start","end","previouslyWindowedRef","selectedIndex","value","scrollToFirst","scrollToLast","afterLength","after","before"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport findIndex from 'lodash/findIndex'\nimport React, { useContext, useEffect, useMemo, useRef } from 'react'\nimport { getWindowedListBoundaries } from '../../../../utils/getWindowedListBoundaries'\nimport { ComboboxContext, ComboboxMultiContext } from '../../Combobox'\nimport type { FlatOption, SelectOptionObject } from '../types'\n\nexport const optionHeight = 28\n\nexport function useShouldWindowOptions(\n  flatOptions?: FlatOption[],\n  propsWindowedOptions?: boolean\n) {\n  return useMemo(() => {\n    if (!flatOptions) return false\n    if (propsWindowedOptions === false) return false\n    // Without windowing prop, default is to turn it on at 100 options\n    if (flatOptions.length < 100 && !propsWindowedOptions) return false\n    return true\n  }, [flatOptions, propsWindowedOptions])\n}\n\nexport function useWindowedOptions(\n  windowing?: boolean,\n  flatOptions?: FlatOption[],\n  navigationOptions?: SelectOptionObject[],\n  isMulti?: boolean\n) {\n  const context = useContext(ComboboxContext)\n  const contextMulti = useContext(ComboboxMultiContext)\n  const contextToUse = isMulti ? contextMulti : context\n  const {\n    data: { navigationOption },\n    listClientRect,\n    listScrollPosition,\n    isScrollingRef,\n    optionsRef,\n  } = contextToUse\n\n  // windowing prop on ComboboxList disables useAddOptionToContext,\n  // so we need to add it here to support keyboard nav\n\n  // add options to ComboboxContext.optionsRef\n  useEffect(() => {\n    // optionsToWindow will be empty if windowing is false, so no need to check windowing as well\n    if (navigationOptions?.length && optionsRef) {\n      optionsRef.current = navigationOptions\n    }\n  }, [navigationOptions, optionsRef])\n\n  // Get the windowed list boundaries\n  const containerHeight = listClientRect && listClientRect.height\n  let { start, end } = useMemo(\n    () =>\n      getWindowedListBoundaries({\n        enabled: windowing,\n        height: containerHeight,\n        itemCount: flatOptions ? flatOptions.length : 0,\n        itemHeight: optionHeight,\n        scrollPosition: listScrollPosition,\n      }),\n    [flatOptions, containerHeight, listScrollPosition, windowing]\n  )\n\n  // The current value is highlighted when the menu first opens\n  // but it may be outside the windowed options\n  // so we start the list with just that option\n  // also need to do this when the menu goes from un-windowed to windowed\n  // (e.g. due to deleting characters when filtering)\n  const previouslyWindowedRef = useRef<boolean>()\n  if (windowing && !previouslyWindowedRef.current) {\n    if (navigationOption) {\n      const selectedIndex = findIndex(flatOptions, [\n        'value',\n        navigationOption.value,\n      ])\n      if (selectedIndex > -1) {\n        start = selectedIndex\n        end = selectedIndex\n      }\n    }\n  }\n  previouslyWindowedRef.current = windowing\n\n  // If the user keyboard navigates \"down\" from the last option or \"up\" from the first option\n  // we need to render the top or bottom of the list (which are outside our \"window\") and scroll there\n  let scrollToFirst = false\n  let scrollToLast = false\n  if (flatOptions?.length && navigationOptions?.length && navigationOption) {\n    scrollToFirst =\n      !isScrollingRef?.current &&\n      start > 0 &&\n      navigationOption.value === navigationOptions[0].value\n    scrollToLast =\n      end < flatOptions.length - 1 &&\n      navigationOption.value ===\n        navigationOptions[navigationOptions.length - 1].value\n  }\n  const afterLength = flatOptions ? flatOptions.length - 1 - end : 0\n\n  return {\n    // after & before are spacers to make scrolling smooth\n    after:\n      afterLength > 0 ? (\n        <li style={{ height: `${afterLength * optionHeight}px` }} />\n      ) : null,\n    before:\n      start > 0 ? <li style={{ height: `${start * optionHeight}px` }} /> : null,\n    end,\n    scrollToFirst,\n    scrollToLast,\n    start,\n  }\n}\n"],"file":"useWindowedOptions.js"}