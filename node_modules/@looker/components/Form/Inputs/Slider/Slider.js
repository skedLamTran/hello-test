var _excluded = ["min", "max", "value", "step", "onChange", "name", "id", "className", "disabled"];

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import "core-js/modules/es.function.name.js";
import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.parse-float.js";
import "core-js/modules/es.string.small.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.is-array.js";
import "core-js/modules/es.symbol.description.js";
import "core-js/modules/es.object.to-string.js";
import "core-js/modules/es.symbol.iterator.js";
import "core-js/modules/es.array.iterator.js";
import "core-js/modules/es.string.iterator.js";
import "core-js/modules/web.dom-collections.iterator.js";
import "core-js/modules/es.array.slice.js";
import "core-js/modules/es.array.from.js";

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef, useState } from 'react';
import isFunction from 'lodash/isFunction';
import styled, { css } from 'styled-components';
import { reset, space, typography, width } from '@looker/design-tokens';
var SliderInternal = forwardRef(function (_ref, ref) {
  var _ref$min = _ref.min,
      min = _ref$min === void 0 ? 0 : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === void 0 ? 10 : _ref$max,
      _ref$value = _ref.value,
      value = _ref$value === void 0 ? 0 : _ref$value,
      step = _ref.step,
      onChange = _ref.onChange,
      name = _ref.name,
      id = _ref.id,
      className = _ref.className,
      disabled = _ref.disabled,
      restProps = _objectWithoutProperties(_ref, _excluded);

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isFocused = _useState2[0],
      setIsFocused = _useState2[1];

  var _useState3 = useState(value),
      _useState4 = _slicedToArray(_useState3, 2),
      internalValue = _useState4[0],
      setInternalValue = _useState4[1];

  if (min > max) {
    console.warn("Unable to render <Slider /> because the 'min' prop was set greater than 'max' value. MIN: ".concat(min, ", MAX: ").concat(max));
    return null;
  }

  var boundSliderValue = function boundSliderValue(v) {
    return Math.min(Math.max(v, min), max);
  };

  var displayValue = isFunction(onChange) ? boundSliderValue(value) : boundSliderValue(internalValue);
  var fillPercent = Math.round((displayValue - min) / (max - min) * 100);

  var handleFocus = function handleFocus() {
    setIsFocused(true);
  };

  var handleUnfocus = function handleUnfocus() {
    setIsFocused(false);
  };

  var internalChangeHandler = function internalChangeHandler(event) {
    var evtValue = event.target.value;
    setInternalValue(parseFloat(evtValue));
  };

  var handleChange = isFunction(onChange) ? onChange : internalChangeHandler;
  return React.createElement("div", {
    className: className,
    "data-testid": "container"
  }, React.createElement(SliderValueWrapper, null, React.createElement(SliderValue, {
    disabled: disabled,
    isFocused: isFocused,
    offsetPercent: fillPercent
  }, displayValue)), React.createElement(SliderTrack, null, React.createElement(SliderFill, {
    offsetPercent: fillPercent,
    disabled: disabled
  }), React.createElement(SliderThumb, {
    isFocused: isFocused,
    offsetPercent: fillPercent,
    disabled: disabled
  })), React.createElement(SliderInput, {
    disabled: disabled,
    id: id,
    isFocused: isFocused,
    max: max,
    min: min,
    name: name,
    onChange: handleChange,
    step: step,
    offsetPercent: fillPercent,
    value: displayValue,
    "aria-labelledby": restProps['aria-labelledby'],
    "aria-describedby": restProps['aria-describedby'],
    "data-testid": "slider-input",
    ref: ref,
    onBlur: handleUnfocus,
    onFocus: handleFocus
  }));
});
var sliderThumbCss = css(["height:16px;visibility:hidden;width:16px;"]);
var SliderThumb = styled.div.withConfig({
  displayName: "Slider__SliderThumb",
  componentId: "sc-1q2hgcp-0"
})(["border-radius:100%;left:", ";position:absolute;top:-6px;transform:translateX(-50%);transition:transform 250ms,box-shadow 250ms;", ""], function (_ref2) {
  var _ref2$offsetPercent = _ref2.offsetPercent,
      offsetPercent = _ref2$offsetPercent === void 0 ? 0 : _ref2$offsetPercent;
  return "".concat(offsetPercent, "%");
}, function (_ref3) {
  var colors = _ref3.theme.colors,
      isFocused = _ref3.isFocused,
      disabled = _ref3.disabled;
  return css(["background:", ";border:3px solid ", ";height:16px;width:16px;", " ", ""], colors.field, colors.key, isFocused && 'border-width: 5px;', disabled && "border-color: ".concat(colors.neutral, ";"));
});
var SliderInput = styled.input.attrs(function () {
  return {
    type: 'range'
  };
}).withConfig({
  displayName: "Slider__SliderInput",
  componentId: "sc-1q2hgcp-1"
})(["background:transparent;display:block;height:22px;left:8px;margin:0;position:relative;-webkit-appearance:none;width:calc(100% - 16px);&::-webkit-slider-thumb{-webkit-appearance:none;", "}&::-moz-range-thumb{", "}&::-ms-thumb{", "}&::-ms-track{background:transparent;border-color:transparent;color:transparent;cursor:pointer;width:100%;}&::-moz-focus-outer{border:none;}&:focus{outline:none;}"], sliderThumbCss, sliderThumbCss, sliderThumbCss);
var SliderTrack = styled.div.withConfig({
  displayName: "Slider__SliderTrack",
  componentId: "sc-1q2hgcp-2"
})(["background:", ";border-radius:", ";height:4px;left:16px;margin-top:-2px;position:absolute;top:50%;width:calc(100% - 32px);"], function (_ref4) {
  var theme = _ref4.theme;
  return theme.colors.ui2;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.radii.small;
});
var SliderFill = styled.div.withConfig({
  displayName: "Slider__SliderFill",
  componentId: "sc-1q2hgcp-3"
})(["background:", ";border-radius:", ";height:100%;width:", "%;"], function (_ref6) {
  var colors = _ref6.theme.colors,
      disabled = _ref6.disabled;
  return disabled ? colors.neutral : colors.key;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.radii.small;
}, function (_ref8) {
  var offsetPercent = _ref8.offsetPercent;
  return offsetPercent;
});
var SliderValue = styled.div.withConfig({
  displayName: "Slider__SliderValue",
  componentId: "sc-1q2hgcp-4"
})(["background:", ";border-radius:1rem;color:", ";left:", "%;padding:0 0.5rem;position:absolute;text-align:center;transform:translateX(-50%) translateY(-0.9rem);user-select:none;"], function (_ref9) {
  var theme = _ref9.theme,
      isFocused = _ref9.isFocused;
  return isFocused && theme.colors.keyAccent;
}, function (_ref10) {
  var colors = _ref10.theme.colors,
      disabled = _ref10.disabled;
  return disabled ? colors.neutral : colors.key;
}, function (_ref11) {
  var offsetPercent = _ref11.offsetPercent;
  return offsetPercent;
});
var SliderValueWrapper = styled.div.withConfig({
  displayName: "Slider__SliderValueWrapper",
  componentId: "sc-1q2hgcp-5"
})(["margin:0 auto;position:relative;width:calc(100% - 30px);"]);
export var Slider = styled(SliderInternal).attrs(function (_ref12) {
  var _ref12$fontSize = _ref12.fontSize,
      fontSize = _ref12$fontSize === void 0 ? 'small' : _ref12$fontSize,
      _ref12$lineHeight = _ref12.lineHeight,
      lineHeight = _ref12$lineHeight === void 0 ? 'xsmall' : _ref12$lineHeight,
      _ref12$mt = _ref12.mt,
      mt = _ref12$mt === void 0 ? 'medium' : _ref12$mt,
      _ref12$width = _ref12.width,
      width = _ref12$width === void 0 ? '100%' : _ref12$width;
  return {
    fontSize: fontSize,
    lineHeight: lineHeight,
    mt: mt,
    width: width
  };
}).withConfig({
  displayName: "Slider",
  componentId: "sc-1q2hgcp-6"
})(["", " ", " ", " ", " position:relative;"], reset, space, width, typography);
SliderInternal.displayName = 'Slider';
//# sourceMappingURL=Slider.js.map