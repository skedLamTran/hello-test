import type { CompatibleHTMLProps, FlexboxProps, LayoutProps, TypographyProps, SpaceProps } from '@looker/design-tokens';
import React from 'react';
import type { ComboboxCallback, ComboboxMultiCallback, ComboboxOptionObject } from './types';
export interface ComboboxBaseProps extends FlexboxProps, Omit<LayoutProps, 'size'>, SpaceProps, TypographyProps, Omit<CompatibleHTMLProps<HTMLDivElement>, 'readOnly' | 'onChange' | 'value' | 'defaultValue'> {
}
export interface ComboboxCommonProps<TCallback extends ComboboxCallback | ComboboxMultiCallback = ComboboxCallback> {
    openOnFocus?: boolean;
    openOnClick?: boolean;
    onChange?: TCallback;
    onClose?: TCallback;
    onOpen?: TCallback;
}
export interface ComboboxProps extends ComboboxBaseProps, ComboboxCommonProps {
    value?: ComboboxOptionObject;
    defaultValue?: ComboboxOptionObject;
}
export declare const ComboboxInternal: React.ForwardRefExoticComponent<ComboboxProps & React.RefAttributes<HTMLDivElement>>;
export declare const ComboboxWrapper: React.ForwardRefExoticComponent<ComboboxBaseProps & {
    isVisible: boolean;
} & React.RefAttributes<HTMLDivElement>>;
export declare const Combobox: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<ComboboxProps & React.RefAttributes<HTMLDivElement>>, import("styled-components").DefaultTheme, {
    display: import("styled-system").ResponsiveValue<import("csstype").Property.Display, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>>;
}, "display">;
