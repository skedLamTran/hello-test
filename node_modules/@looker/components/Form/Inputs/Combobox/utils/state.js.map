{"version":3,"sources":["../../../../../src/Form/Inputs/Combobox/utils/state.ts"],"names":["xorWith","useReducer","useRef","getComboboxText","parseOption","ComboboxState","ComboboxActionType","stateChart","initial","IDLE","states","on","BLUR","CLEAR","CHANGE","SUGGESTING","CHANGE_SILENT","CHANGE_VALUES","FOCUS","NAVIGATE","NAVIGATING","SELECT_SILENT","ESCAPE","SELECT_WITH_CLICK","INTERACT","INTERACTING","SELECT_WITH_KEYBOARD","findNavigationValue","state","action","option","persistSelection","singularState","multiState","options","navigationOption","length","undefined","reducer","data","nextState","type","indexOf","lastActionType","inputValue","Error","getOptionsFromValues","currentOptions","newValues","reduce","acc","value","valueAsOption","matchingOption","find","duplicateOption","reducerMulti","inputValues","o1","o2","useReducerMachine","reducerFn","initialData","defaultPayload","stateRef","dispatch","transition","payload","currentState","current","console","warn"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\n// Much of the following is pulled from https://github.com/reach/reach-ui\n// because their work is fantastic (but is not in TypeScript)\n\nimport xorWith from 'lodash/xorWith'\nimport type { Reducer } from 'react'\nimport { useReducer, useRef } from 'react'\nimport type { ComboboxOptionObject } from '../types'\nimport { getComboboxText } from './getComboboxText'\nimport { parseOption } from './parseOption'\n\nexport enum ComboboxState {\n  // Nothing going on, waiting for the user to type or use the arrow keys\n  IDLE = 'IDLE',\n\n  // The component is suggesting options as the user types\n  SUGGESTING = 'SUGGESTING',\n\n  // The user is using the keyboard to navigate the list, not typing\n  NAVIGATING = 'NAVIGATING',\n\n  // The user is interacting with arbitrary elements inside the popup that\n  // are not ComboboxInputs\n  INTERACTING = 'INTERACTING',\n}\n\nexport enum ComboboxActionType {\n  // User cleared the value w/ backspace, but input still has focus\n  CLEAR = 'CLEAR',\n\n  // User is typing\n  CHANGE = 'CHANGE',\n\n  // Used for the setting the initial value\n  CHANGE_SILENT = 'CHANGE_SILENT',\n\n  // Used for ComboboxMultiInput when the ComboboxMultiInput has chips removed\n  CHANGE_VALUES = 'CHANGE_VALUES',\n\n  // User is navigating w/ the keyboard\n  NAVIGATE = 'NAVIGATE',\n\n  // User can be navigating with keyboard and then click instead, we want the\n  // value from the click, not the current nav item\n  SELECT_WITH_KEYBOARD = 'SELECT_WITH_KEYBOARD',\n  SELECT_WITH_CLICK = 'SELECT_WITH_CLICK',\n\n  // Used for the setting the initial option\n  SELECT_SILENT = 'SELECT_SILENT',\n\n  // Pretty self-explanatory, user can hit escape or blur to close the popover\n  ESCAPE = 'ESCAPE',\n  BLUR = 'BLUR',\n\n  // The user left the input to interact with arbitrary elements inside the popup\n  INTERACT = 'INTERACT',\n\n  FOCUS = 'FOCUS',\n}\n\nexport interface ComboboxData {\n  inputValue?: string\n  option?: ComboboxOptionObject\n  navigationOption?: ComboboxOptionObject\n  lastActionType?: ComboboxActionType\n}\n\nexport interface ComboboxMultiData extends Omit<ComboboxData, 'option'> {\n  /**\n   * Multi uses both inputValue (typed) and inputValues  (entered chips)\n   */\n  options: ComboboxOptionObject[]\n}\n\nexport interface ComboboxAction {\n  type: ComboboxActionType\n  state: ComboboxState\n}\n\nexport interface ComboboxActionPayload {\n  option?: ComboboxOptionObject\n  persistSelection?: boolean\n  inputValue?: string\n}\n\nexport interface ComboboxMultiActionPayload extends ComboboxActionPayload {\n  // for when user removes chips directly\n  inputValues?: string[]\n  // only for SELECT_SILENT\n  options?: ComboboxOptionObject[]\n}\n\nexport type ComboboxActionWithPayload = ComboboxAction & ComboboxActionPayload\nexport type ComboboxMultiActionWithPayload = ComboboxAction &\n  ComboboxMultiActionPayload\n\nexport interface StateChart {\n  initial: ComboboxState\n  states: {\n    [key in ComboboxState]: {\n      on: { [key in ComboboxActionType]?: ComboboxState }\n    }\n  }\n}\n\nexport type ComboboxTransition<TPayload = ComboboxActionPayload> = (\n  action: ComboboxActionType,\n  payload?: TPayload\n) => void\n\nexport const stateChart: StateChart = {\n  initial: ComboboxState.IDLE,\n  states: {\n    [ComboboxState.IDLE]: {\n      on: {\n        [ComboboxActionType.BLUR]: ComboboxState.IDLE,\n        [ComboboxActionType.CLEAR]: ComboboxState.IDLE,\n        [ComboboxActionType.CHANGE]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.CHANGE_SILENT]: ComboboxState.IDLE,\n        [ComboboxActionType.CHANGE_VALUES]: ComboboxState.IDLE,\n        [ComboboxActionType.FOCUS]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.NAVIGATE]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.SELECT_SILENT]: ComboboxState.IDLE,\n      },\n    },\n    [ComboboxState.SUGGESTING]: {\n      on: {\n        [ComboboxActionType.CHANGE]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.CHANGE_SILENT]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.CHANGE_VALUES]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.FOCUS]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.NAVIGATE]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.CLEAR]: ComboboxState.IDLE,\n        [ComboboxActionType.ESCAPE]: ComboboxState.IDLE,\n        [ComboboxActionType.BLUR]: ComboboxState.IDLE,\n        [ComboboxActionType.SELECT_WITH_CLICK]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.SELECT_SILENT]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.INTERACT]: ComboboxState.INTERACTING,\n      },\n    },\n    [ComboboxState.NAVIGATING]: {\n      on: {\n        [ComboboxActionType.CHANGE]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.CHANGE_SILENT]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.CHANGE_VALUES]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.FOCUS]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.CLEAR]: ComboboxState.IDLE,\n        [ComboboxActionType.BLUR]: ComboboxState.IDLE,\n        [ComboboxActionType.ESCAPE]: ComboboxState.IDLE,\n        [ComboboxActionType.NAVIGATE]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.SELECT_WITH_CLICK]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.SELECT_WITH_KEYBOARD]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.SELECT_SILENT]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.INTERACT]: ComboboxState.INTERACTING,\n      },\n    },\n    [ComboboxState.INTERACTING]: {\n      on: {\n        [ComboboxActionType.CHANGE]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.CHANGE_SILENT]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.CHANGE_VALUES]: ComboboxState.INTERACTING,\n        [ComboboxActionType.FOCUS]: ComboboxState.SUGGESTING,\n        [ComboboxActionType.BLUR]: ComboboxState.IDLE,\n        [ComboboxActionType.ESCAPE]: ComboboxState.IDLE,\n        [ComboboxActionType.NAVIGATE]: ComboboxState.NAVIGATING,\n        [ComboboxActionType.SELECT_WITH_CLICK]: ComboboxState.INTERACTING,\n        [ComboboxActionType.SELECT_SILENT]: ComboboxState.INTERACTING,\n      },\n    },\n  },\n}\n\n// When we open a list, set the navigation option to the option in the input, if\n// it's in the list, then it'll automatically be highlighted.\nconst findNavigationValue = (\n  state: ComboboxData | ComboboxMultiData,\n  action: ComboboxActionPayload\n) => {\n  if (action.option) {\n    return action.option\n  } else if (action.persistSelection) {\n    const singularState = state as ComboboxData\n    const multiState = state as ComboboxMultiData\n    if (singularState.option) {\n      return singularState.option\n    } else if (multiState.options) {\n      return (\n        multiState.navigationOption ||\n        multiState.options[multiState.options.length - 1]\n      )\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nexport const reducer: Reducer<ComboboxData, ComboboxActionWithPayload> = (\n  data,\n  action\n) => {\n  const nextState = { ...data }\n  if (action.type.indexOf('_SILENT') === -1) {\n    nextState.lastActionType = action.type\n  }\n  switch (action.type) {\n    case ComboboxActionType.CHANGE:\n    case ComboboxActionType.CHANGE_SILENT:\n      return {\n        ...nextState,\n        inputValue: action.inputValue,\n      }\n    case ComboboxActionType.NAVIGATE:\n      return {\n        ...nextState,\n        navigationOption: findNavigationValue(nextState, action),\n      }\n    case ComboboxActionType.CLEAR:\n      return {\n        ...nextState,\n        inputValue: '',\n        navigationOption: undefined,\n        option: undefined,\n      }\n    case ComboboxActionType.BLUR:\n    case ComboboxActionType.ESCAPE:\n      return {\n        ...nextState,\n        inputValue: action.inputValue || getComboboxText(data.option),\n        navigationOption: undefined,\n      }\n    case ComboboxActionType.SELECT_WITH_CLICK:\n    case ComboboxActionType.SELECT_SILENT:\n      return {\n        ...nextState,\n        inputValue: getComboboxText(action.option),\n        navigationOption: undefined,\n        option: action.option,\n      }\n    case ComboboxActionType.SELECT_WITH_KEYBOARD:\n      return {\n        ...nextState,\n        inputValue: getComboboxText(data.navigationOption),\n        navigationOption: undefined,\n        option: data.navigationOption,\n      }\n    case ComboboxActionType.INTERACT:\n      return nextState\n    case ComboboxActionType.FOCUS:\n      return {\n        ...nextState,\n        navigationOption: findNavigationValue(nextState, action),\n      }\n\n    default:\n      throw new Error(`Unknown action ${action.type}`)\n  }\n}\n\n// Update options from as input values are added / removed via InputChips(Base)\nexport function getOptionsFromValues(\n  currentOptions: ComboboxOptionObject[],\n  newValues?: string[]\n) {\n  if (!newValues) return []\n  // Convert new values into options\n  // ****NOTE****\n  // freeInput options may be near-duplicates of existing options (different case, value / label mismatch, etc)\n  // this option should be used only when exact matching to existing values is not important or can be handled externally\n\n  return newValues.reduce((acc: ComboboxOptionObject[], value: string) => {\n    const valueAsOption = parseOption(value)\n    const matchingOption = currentOptions.find(\n      option => option.value === valueAsOption.value\n    )\n    const duplicateOption = acc.find(\n      option => option.value === valueAsOption.value\n    )\n    if (!duplicateOption) {\n      if (matchingOption) {\n        return [...acc, matchingOption]\n      } else {\n        return [...acc, valueAsOption]\n      }\n    }\n    return acc\n  }, [])\n}\n\nexport const reducerMulti: Reducer<\n  ComboboxMultiData,\n  ComboboxMultiActionWithPayload\n> = (data, action) => {\n  const nextState = { ...data }\n  if (action.type.indexOf('_SILENT') === -1) {\n    nextState.lastActionType = action.type\n  }\n  switch (action.type) {\n    case ComboboxActionType.CHANGE:\n    case ComboboxActionType.CHANGE_SILENT:\n      return {\n        ...nextState,\n        inputValue: action.inputValue,\n      }\n    case ComboboxActionType.CHANGE_VALUES:\n      return {\n        ...nextState,\n        navigationOption: undefined,\n        options: getOptionsFromValues(nextState.options, action.inputValues),\n      }\n    case ComboboxActionType.NAVIGATE:\n      return {\n        ...nextState,\n        navigationOption: findNavigationValue(nextState, action),\n      }\n    case ComboboxActionType.CLEAR:\n      return {\n        ...nextState,\n        inputValue: '',\n        navigationOption: undefined,\n        options: [],\n      }\n    case ComboboxActionType.BLUR:\n    case ComboboxActionType.ESCAPE:\n      return {\n        ...nextState,\n        inputValue: action.inputValue || '',\n        navigationOption: undefined,\n      }\n    case ComboboxActionType.SELECT_WITH_CLICK:\n      return {\n        ...nextState,\n        inputValue: '',\n        navigationOption: findNavigationValue(nextState, action),\n        options: xorWith(\n          nextState.options,\n          action.option ? [action.option] : [],\n          (o1, o2) => o1.value === o2.value\n        ),\n      }\n    case ComboboxActionType.SELECT_SILENT:\n      return {\n        ...nextState,\n        navigationOption: undefined,\n        options: action.options || [],\n      }\n    case ComboboxActionType.SELECT_WITH_KEYBOARD:\n      return {\n        ...nextState,\n        inputValue: '',\n        navigationOption: findNavigationValue(nextState, action),\n        options: xorWith(\n          nextState.options,\n          data.navigationOption ? [data.navigationOption] : [],\n          (o1, o2) => o1.value === o2.value\n        ),\n      }\n    case ComboboxActionType.INTERACT:\n      return nextState\n    case ComboboxActionType.FOCUS:\n      return {\n        ...nextState,\n        navigationOption: findNavigationValue(nextState, action),\n      }\n\n    default:\n      throw new Error(`Unknown action ${action.type}`)\n  }\n}\n\n// This manages transitions between states with a built in reducer to manage\n// the data that goes with those transitions.\nexport function useReducerMachine<\n  TData = ComboboxData,\n  TPayload = ComboboxActionPayload\n>(\n  reducerFn: Reducer<TData, ComboboxAction & TPayload>,\n  initialData: TData,\n  defaultPayload: TPayload\n): [ComboboxState, TData, ComboboxTransition<TPayload>] {\n  const stateRef = useRef(stateChart.initial)\n  const [data, dispatch] = useReducer(reducerFn, initialData)\n\n  function transition(\n    action: ComboboxActionType,\n    payload: TPayload = defaultPayload\n  ) {\n    const currentState = stateChart.states[stateRef.current]\n    const nextState = currentState.on[action]\n    if (!nextState) {\n      // eslint-disable-next-line no-console\n      console.warn(`Unknown action \"${action}\" for state \"${stateRef.current}\"`)\n      return\n    }\n    stateRef.current = nextState\n    dispatch({ state: stateRef.current, type: action, ...payload })\n  }\n\n  return [stateRef.current, data, transition]\n}\n"],"file":"state.js"}