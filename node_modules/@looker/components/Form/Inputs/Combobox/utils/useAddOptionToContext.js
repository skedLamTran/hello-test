import "core-js/modules/es.array.splice.js";
import "core-js/modules/es.array.index-of.js";
import { useEffect, useRef, useContext } from 'react';
export function useAddOptionToContext(context, value, label, scrollIntoView) {
  var _useContext = useContext(context),
      optionsRef = _useContext.optionsRef,
      windowingPropRef = _useContext.windowingPropRef;

  var indexRef = useRef(-1);
  useEffect(function () {
    var option = {
      label: label,
      scrollIntoView: scrollIntoView,
      value: value
    };
    var optionsRefCurrent = optionsRef && optionsRef.current;
    var windowing = windowingPropRef && windowingPropRef.current;

    if (optionsRefCurrent && !windowing) {
      if (indexRef.current > -1) {
        optionsRefCurrent.splice(indexRef.current, 0, option);
      } else {
        optionsRefCurrent.push(option);
      }
    }

    return function () {
      if (optionsRefCurrent && !windowing) {
        var index = optionsRefCurrent.indexOf(option);
        indexRef.current = index;
        optionsRefCurrent.splice(index, 1);
      }
    };
  }, [value, label, optionsRef, scrollIntoView, windowingPropRef]);
}
//# sourceMappingURL=useAddOptionToContext.js.map