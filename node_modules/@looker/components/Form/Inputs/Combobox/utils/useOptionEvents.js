import xorWith from 'lodash/xorWith';
import { useContext } from 'react';
import { useWrapEvent } from '../../../../utils';
import { ComboboxActionType } from './state';
export function useOptionEvents(props, context) {
  var label = props.label,
      value = props.value,
      onClick = props.onClick,
      onMouseEnter = props.onMouseEnter;

  var _useContext = useContext(context),
      data = _useContext.data,
      onChange = _useContext.onChange,
      transition = _useContext.transition,
      closeOnSelectPropRef = _useContext.closeOnSelectPropRef,
      isScrollingRef = _useContext.isScrollingRef;

  var _ref = data,
      options = _ref.options;

  function handleClick() {
    var option = {
      label: label,
      value: value
    };

    if (onChange) {
      if (options) {
        ;
        onChange(xorWith(options, [option], function (o1, o2) {
          return o1.value === o2.value;
        }));
      } else {
        ;
        onChange(option);
      }
    }

    transition && transition(ComboboxActionType.SELECT_WITH_CLICK, {
      option: option
    });

    if (closeOnSelectPropRef && closeOnSelectPropRef.current) {
      transition && transition(ComboboxActionType.ESCAPE);
    }
  }

  var handleMouseEnter = function handleMouseEnter() {
    requestAnimationFrame(function () {
      if (isScrollingRef !== null && isScrollingRef !== void 0 && isScrollingRef.current) return;
      var option = {
        label: label,
        value: value
      };
      transition && transition(ComboboxActionType.NAVIGATE, {
        option: option
      });
    });
  };

  return {
    onClick: useWrapEvent(handleClick, onClick),
    onMouseEnter: useWrapEvent(handleMouseEnter, onMouseEnter)
  };
}
//# sourceMappingURL=useOptionEvents.js.map