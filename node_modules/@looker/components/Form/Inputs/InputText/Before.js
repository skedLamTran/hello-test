import React, { useCallback, useContext } from 'react';
import { Span } from '../../../Text';
import { measureElement } from '../../../utils';
import { InputTextContext } from './InputTextContext';
import { InputTextContent } from './InputTextContent';

var Measure = function Measure(_ref) {
  var children = _ref.children;

  var _useContext = useContext(InputTextContext),
      setBeforeWidth = _useContext.setBeforeWidth;

  var ref = useCallback(function (element) {
    var _measureElement = measureElement(element),
        width = _measureElement.width;

    setBeforeWidth(width);
  }, [setBeforeWidth]);
  return React.createElement("span", {
    ref: ref
  }, children);
};

export var Before = function Before(_ref2) {
  var iconBefore = _ref2.iconBefore,
      before = _ref2.before;
  var iconBeforeWrapped = iconBefore && React.createElement(InputTextContent, {
    pl: "u2"
  }, iconBefore);
  var beforeStringWrapped = typeof before === 'string' && React.createElement(Measure, null, React.createElement(InputTextContent, {
    pl: "u2"
  }, React.createElement(Span, {
    fontSize: "small"
  }, before)));
  var beforeWrapped = before && typeof before !== 'string' && React.createElement(Measure, null, before);
  return iconBeforeWrapped || beforeStringWrapped || beforeWrapped || null;
};
//# sourceMappingURL=Before.js.map