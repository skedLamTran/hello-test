import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { useEffect, useRef } from 'react';
import styled from 'styled-components';
import { useMouseDragPosition, usePreviousValue } from '../../../../utils';
import { simpleHsvToHex } from '../utils';
import { Handle } from '../Handle';
export var HueSliderLayout = function HueSliderLayout(_ref) {
  var _sliderRef$current;

  var className = _ref.className,
      hsv = _ref.hsv,
      setHsv = _ref.setHsv,
      width = _ref.width;
  var handlePosition = hsv.h / 360 * width;
  var sliderRef = useRef(null);
  var sliderLeft = ((_sliderRef$current = sliderRef.current) === null || _sliderRef$current === void 0 ? void 0 : _sliderRef$current.getBoundingClientRect().left) || 0;

  var handleSliderClick = function handleSliderClick(event) {
    var clickEventX = event.clientX;
    var newHue = (clickEventX - sliderLeft) / width * 360;
    setHsv(_objectSpread(_objectSpread({}, hsv), {}, {
      h: newHue
    }));
  };

  var _useMouseDragPosition = useMouseDragPosition(sliderRef.current),
      isMouseDown = _useMouseDragPosition.isMouseDown,
      mousePos = _useMouseDragPosition.mousePos;

  var previousIsMouseDown = usePreviousValue(isMouseDown);

  var handleHandleDrag = function handleHandleDrag() {
    var newHue = (mousePos.x - sliderLeft) / width * 360;

    if (newHue > 360) {
      newHue = 360;
    } else if (newHue < 0) {
      newHue = 0;
    }

    setHsv(_objectSpread(_objectSpread({}, hsv), {}, {
      h: newHue
    }));
  };

  useEffect(function () {
    if (isMouseDown && previousIsMouseDown) {
      handleHandleDrag();
    }
  }, [mousePos]);
  var sliderHandleColor = simpleHsvToHex(_objectSpread(_objectSpread({}, hsv), {}, {
    s: 1,
    v: 1
  }));
  return React.createElement(HueSliderTrack, {
    className: className,
    isMouseDown: isMouseDown,
    onMouseDown: handleSliderClick,
    ref: sliderRef,
    width: width
  }, React.createElement(Handle, {
    color: sliderHandleColor,
    isMouseDown: isMouseDown,
    x: handlePosition
  }));
};
var HueSliderTrack = styled.div.withConfig({
  displayName: "HueSlider__HueSliderTrack",
  componentId: "sc-10igbq6-0"
})(["background:linear-gradient( 90deg,#f00 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,#f00 );border-radius:", ";cursor:", ";height:", ";width:", "px;"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.radii.large;
}, function (_ref3) {
  var isMouseDown = _ref3.isMouseDown;
  return isMouseDown ? 'grabbing' : 'default';
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.space.u3;
}, function (_ref5) {
  var width = _ref5.width;
  return width;
});
export var HueSlider = styled(HueSliderLayout).withConfig({
  displayName: "HueSlider",
  componentId: "sc-10igbq6-1"
})([""]);
//# sourceMappingURL=HueSlider.js.map