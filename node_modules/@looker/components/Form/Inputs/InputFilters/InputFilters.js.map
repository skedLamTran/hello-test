{"version":3,"sources":["../../../../src/Form/Inputs/InputFilters/InputFilters.tsx"],"names":["useTranslation","omit","styled","React","useMemo","useState","useRef","Close","FilterList","Select","InputText","inputTextFocus","inputCSS","Icon","IconButton","Chip","Text","Popover","PopoverContent","InputFiltersChip","inputFilterEditor","InputFiltersLayout","className","filters","hideFilterIcon","onChange","props","t","placeholder","undefined","fieldEditing","setFieldEditing","assignedFilters","filter","value","field","sort","a","b","unassignedFilters","map","assigned","includes","filterTerm","setFilterTerm","options","reduce","acc","option","label","optionMatchesFilter","Object","values","some","toLocaleLowerCase","indexOf","inputRef","isClearable","length","clearFilters","focusInput","current","focus","handleFilterLookupChange","find","i","editor","editFilter","handleDelete","currentFilter","setFieldEditingValue","filterIndex","findIndex","f","newFilters","updateFilter","closeEditor","filterToken","filterOptions","ChipWrapper","div","theme","space","u1","InputFilters","u05","u2"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { useTranslation } from 'react-i18next'\nimport omit from 'lodash/omit'\nimport styled from 'styled-components'\nimport type { FC } from 'react'\nimport React, { useMemo, useState, useRef } from 'react'\nimport { Close } from '@styled-icons/material/Close'\nimport { FilterList } from '@styled-icons/material/FilterList'\nimport type { SelectOptionObject } from '../Select'\nimport { Select } from '../Select'\nimport { InputText, inputTextFocus, inputCSS } from '../InputText'\nimport { Icon } from '../../../Icon'\nimport { IconButton } from '../../../Button'\nimport { Chip } from '../../../Chip'\nimport { Text } from '../../../Text'\nimport { Popover, PopoverContent } from '../../../Popover'\nimport { InputFiltersChip } from './InputFiltersChip'\nimport { inputFilterEditor } from './inputFilterEditor'\nimport type { InputFiltersProps } from './types'\n\nconst InputFiltersLayout: FC<InputFiltersProps> = ({\n  className,\n  filters,\n  hideFilterIcon = false,\n  onChange,\n  ...props\n}) => {\n  const { t } = useTranslation('InputFilters')\n  const placeholder = props.placeholder || t('Filter List')\n  const [fieldEditing, setFieldEditing] = useState<undefined | string>(\n    undefined\n  )\n\n  const assignedFilters = filters\n    .filter(filter => filter.value || filter.field === fieldEditing)\n    .sort((a, b) => {\n      if (a.value === undefined) {\n        return 1\n      } else if (b.value === undefined) {\n        return -1\n      } else {\n        return 0\n      }\n    })\n\n  const unassignedFilters = filters.filter(\n    filter =>\n      !assignedFilters.map(assigned => assigned.field).includes(filter.field)\n  )\n\n  const [filterTerm, setFilterTerm] = useState('')\n\n  const options = useMemo(\n    () =>\n      unassignedFilters.reduce((acc: SelectOptionObject[], filter) => {\n        const option = {\n          label: filter.label || filter.field,\n          value: filter.field,\n        }\n        const optionMatchesFilter = Object.values(option).some(\n          (value: string) =>\n            value.toLocaleLowerCase().indexOf(filterTerm.toLocaleLowerCase()) >\n            -1\n        )\n        if (optionMatchesFilter) {\n          acc = [...acc, option]\n        }\n        return acc\n      }, []),\n    [filterTerm, unassignedFilters]\n  )\n\n  const inputRef = useRef<null | HTMLInputElement>(null)\n  const isClearable = assignedFilters.length > 0\n\n  const clearFilters = () => {\n    onChange(filters.map(filter => omit(filter, 'value')))\n  }\n\n  const focusInput = () => inputRef.current && inputRef.current.focus()\n\n  const handleFilterLookupChange = (field: string) => {\n    const filter = filters.find(option => option.field === field)\n    if (filter) {\n      setFieldEditing(filter.field)\n    }\n  }\n\n  return (\n    <div className={className} onClick={focusInput}>\n      {!hideFilterIcon && (\n        <Icon\n          color=\"ui4\"\n          mr=\"xsmall\"\n          mt=\"xxsmall\"\n          icon={<FilterList />}\n          size={20}\n        />\n      )}\n      <ChipWrapper>\n        {assignedFilters.map((filter, i) => {\n          const { editor, field, value } = filter\n\n          const editFilter = () => setFieldEditing(field)\n\n          const handleDelete = () =>\n            onChange(\n              filters.map(currentFilter =>\n                currentFilter.field !== field\n                  ? currentFilter\n                  : omit(currentFilter, 'value')\n              )\n            )\n\n          const setFieldEditingValue = (value?: string) => {\n            const filterIndex = assignedFilters.findIndex(\n              f => f.field === fieldEditing\n            )\n\n            const newFilters = [...assignedFilters, ...unassignedFilters]\n            const updateFilter = { ...newFilters[filterIndex], value }\n            newFilters[filterIndex] = updateFilter\n\n            onChange(newFilters)\n          }\n\n          const closeEditor = () => setFieldEditing(undefined)\n\n          const filterToken = value ? (\n            <InputFiltersChip\n              filter={filter}\n              key={i}\n              onClick={editFilter}\n              onDelete={handleDelete}\n            />\n          ) : (\n            <Text fontSize=\"small\" lineHeight=\"xlarge\">\n              {filter?.label || filter.field}:\n            </Text>\n          )\n          return filter.field === fieldEditing ? (\n            <Popover\n              content={\n                <PopoverContent>\n                  {editor\n                    ? editor({\n                        closeEditor,\n                        filterOptions: filter,\n                        onChange: setFieldEditingValue,\n                        value,\n                      })\n                    : inputFilterEditor({\n                        closeEditor,\n                        filterOptions: filter,\n                        onChange: setFieldEditingValue,\n                        value,\n                      })}\n                </PopoverContent>\n              }\n              isOpen={fieldEditing !== undefined}\n              key={i}\n              placement={t('bottom-start')}\n              setOpen={closeEditor}\n            >\n              {filterToken}\n            </Popover>\n          ) : (\n            filterToken\n          )\n        })}\n        {!fieldEditing && (\n          <Select\n            autoResize\n            openOnFocus\n            indicator={false}\n            onFilter={setFilterTerm}\n            isFilterable\n            onChange={handleFilterLookupChange}\n            options={options}\n            placeholder={placeholder}\n            ref={inputRef}\n          />\n        )}\n      </ChipWrapper>\n      {isClearable && (\n        <IconButton\n          icon={<Close />}\n          label={t('Clear Filters')}\n          ml=\"auto\"\n          mt=\"xxsmall\"\n          mr=\"xsmall\"\n          onClick={clearFilters}\n          size=\"xsmall\"\n        />\n      )}\n    </div>\n  )\n}\n\nconst ChipWrapper = styled.div`\n  display: inline-flex;\n  flex: 1;\n  flex-wrap: wrap;\n\n  @supports (gap: 4px) {\n    gap: ${({ theme }) => theme.space.u1};\n    ${Chip} {\n      margin: 0;\n    }\n  }\n`\n\nexport const InputFilters = styled(InputFiltersLayout)`\n  ${inputCSS}\n  align-items: start;\n  display: flex;\n  flex-wrap: wrap;\n  padding: ${({ theme: { space } }) => space.u05} 0;\n  padding-left: ${({ theme: { space } }) => space.u2};\n  width: 100%;\n  &:focus-within {\n    ${inputTextFocus}\n  }\n\n  ${Select} {\n    margin-left: ${({ theme: { space } }) => space.u1};\n  }\n\n  ${Select} ${Icon} {\n    display: none;\n  }\n\n  ${InputText} {\n    border: none;\n    height: 30px;\n    padding: 0;\n\n    &:focus-within {\n      box-shadow: none;\n    }\n\n    input {\n      padding: 0;\n    }\n  }\n`\n"],"file":"InputFilters.js"}