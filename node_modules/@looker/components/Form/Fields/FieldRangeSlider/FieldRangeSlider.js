import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef } from 'react';
import styled from 'styled-components';
import omit from 'lodash/omit';
import { useID } from '../../../utils';
import { RangeSlider } from '../../Inputs/RangeSlider';
import { Field, omitFieldProps, pickFieldProps } from '../Field';
var FieldRangeSliderComponent = forwardRef(function (props, ref) {
  var id = useID(props.id);
  return React.createElement(Field, _extends({
    "data-testid": "FieldSliderId"
  }, pickFieldProps(omit(props, 'validationMessage')), {
    id: id,
    ariaLabelOnly: true
  }), React.createElement(RangeSlider, _extends({}, omitFieldProps(props), {
    "aria-describedby": "describedby-".concat(id),
    "aria-labelledby": "labelledby-".concat(id),
    id: id,
    ref: ref
  })));
});
FieldRangeSliderComponent.displayName = 'FieldRangeSliderComponent';
export var FieldRangeSlider = styled(FieldRangeSliderComponent).withConfig({
  displayName: "FieldRangeSlider",
  componentId: "sc-qtwi2i-0"
})([""]);
//# sourceMappingURL=FieldRangeSlider.js.map