import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.symbol.description.js";
import { width } from '@looker/design-tokens';
import React from 'react';
import styled, { css } from 'styled-components';
import omit from 'lodash/omit';
import pick from 'lodash/pick';
import { inputHeight } from '../../Inputs/height';
import { HelperText } from './HelperText';
import { FieldDetail } from './FieldDetail';
import { FieldLabel } from './FieldLabel';
import { InputArea } from './InputArea';
export var fieldPropKeys = ['className', 'description', 'detail', 'externalLabel', 'id', 'inline', 'label', 'hideLabel', 'labelWidth', 'validationMessage', 'width'];
export var pickFieldProps = function pickFieldProps(props) {
  return pick(props, [].concat(fieldPropKeys, ['disabled', 'required', 'autoResize']));
};
export var omitFieldProps = function omitFieldProps(props) {
  return omit(props, fieldPropKeys);
};
export var Field = styled(function (_ref) {
  var autoResize = _ref.autoResize,
      className = _ref.className,
      children = _ref.children,
      description = _ref.description,
      detail = _ref.detail,
      id = _ref.id,
      ariaLabelOnly = _ref.ariaLabelOnly,
      label = _ref.label,
      hideLabel = _ref.hideLabel,
      required = _ref.required,
      validationMessage = _ref.validationMessage;
  return React.createElement("div", {
    className: className
  }, React.createElement(FieldLabel, {
    ariaLabelOnly: ariaLabelOnly,
    id: id,
    label: label,
    hideLabel: hideLabel,
    required: required
  }), React.createElement(InputArea, {
    autoResize: autoResize
  }, children), detail && React.createElement(FieldDetail, null, detail), React.createElement(HelperText, {
    description: description,
    id: id,
    validationMessage: validationMessage
  }));
}).withConfig({
  displayName: "Field",
  componentId: "sc-1luvvdx-0"
})(["align-items:left;display:", ";", " grid-template-columns:", ";height:fit-content;justify-content:space-between;width:", ";", " ", "{grid-area:input;}", "{grid-area:messages;}& > ", "{grid-area:label;", "}", "{grid-area:detail;justify-self:end;padding-left:", ";", "}"], function (_ref2) {
  var autoResize = _ref2.autoResize;
  return autoResize ? 'inline-grid' : 'grid';
}, function (_ref3) {
  var inline = _ref3.inline;
  return inline ? inlineTemplateAreas : templateAreas;
}, function (_ref4) {
  var inline = _ref4.inline;
  return inline ? '150px 1fr' : undefined;
}, function (_ref5) {
  var autoResize = _ref5.autoResize;
  return autoResize ? 'fit-content' : '100%';
}, width, InputArea, HelperText, FieldLabel, function (_ref6) {
  var inline = _ref6.inline;
  return fieldLabelCSS(inline);
}, FieldDetail, function (_ref7) {
  var space = _ref7.theme.space;
  return space.u3;
}, function (_ref8) {
  var inline = _ref8.inline;
  return inline && css(["align-self:center;"]);
});

var fieldLabelCSS = function fieldLabelCSS(inline) {
  return inline ? css(["height:", ";justify-self:end;line-height:", ";padding-right:", ";text-align:right;"], inputHeight, inputHeight, function (_ref9) {
    var theme = _ref9.theme;
    return theme.space.u3;
  }) : css(["line-height:", ";padding-bottom:", ";"], function (_ref10) {
    var theme = _ref10.theme;
    return theme.lineHeights.xsmall;
  }, function (_ref11) {
    var theme = _ref11.theme;
    return theme.space.u1;
  });
};

var inlineTemplateAreas = css(["grid-template-areas:'label input detail' '. messages messages';"]);
var templateAreas = css(["grid-template-areas:'label detail' 'input input' 'messages messages';"]);
//# sourceMappingURL=Field.js.map