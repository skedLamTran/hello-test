import type { WidthProps } from '@looker/design-tokens';
import type { FocusEvent, ReactNode } from 'react';
import type { ValidationMessageProps } from '../../ValidationMessage/ValidationMessage';
import type { LabelProps } from '../../Label';
declare type FieldLabelBaseProps = {
    id?: string;
    label?: string;
    required?: boolean;
};
export declare type UseFloatingLabelProps = {
    hasValue?: boolean;
    labelOffset?: string;
    checkValueOnBlur?: false | ((e: FocusEvent) => boolean);
};
export declare type FieldBaseProps = FieldLabelBaseProps & {
    className?: string;
    children?: ReactNode;
    autoResize?: boolean;
    disabled?: boolean;
    detail?: ReactNode;
    description?: ReactNode;
    inline?: boolean;
    validationMessage?: ValidationMessageProps;
};
export declare type HideLabelProps = {
    hideLabel?: boolean;
    ariaLabelOnly?: boolean;
};
export declare type FieldProps = FieldBaseProps & WidthProps & HideLabelProps;
export declare type FloatingLabelFieldProps = FieldProps & {
    externalLabel?: boolean;
};
export declare type FloatingLabelFieldPropsInternal = FloatingLabelFieldProps & UseFloatingLabelProps;
export declare type FieldLabelProps = HideLabelProps & FieldLabelBaseProps & LabelProps;
export {};
