import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";
var _excluded = ["nullable", "onChange", "value"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { inputHeight } from '../Form/Inputs/height';
import { ButtonItem } from './ButtonItem';
import { ButtonSet } from './ButtonSet';
var ButtSetAsToggle = ButtonSet;
var ButtonToggleLayout = forwardRef(function (_ref, ref) {
  var nullable = _ref.nullable,
      onChange = _ref.onChange,
      _ref$value = _ref.value,
      value = _ref$value === void 0 ? '' : _ref$value,
      props = _objectWithoutProperties(_ref, _excluded);

  function handleItemClick(e) {
    var newValue = e.currentTarget.value;
    var deselecting = newValue === value;

    if (!deselecting || nullable) {
      if (onChange) {
        onChange(deselecting ? '' : newValue);
      }
    }
  }

  return React.createElement(ButtSetAsToggle, _extends({}, props, {
    value: value,
    onItemClick: handleItemClick,
    ref: ref
  }));
});
ButtonToggleLayout.displayName = 'ButtonToggleLayout';
export var ButtonToggle = styled(ButtonToggleLayout).withConfig({
  displayName: "ButtonToggle",
  componentId: "sc-8vwxgq-0"
})(["background-color:", ";border:solid 1px ", ";border-left-width:0;border-radius:", ";", "{border-left:solid 1px ", ";height:calc(", " - 2px);&:last-child{border-bottom-right-radius:", ";border-top-right-radius:", ";}&:first-child{border-bottom-left-radius:", ";border-top-left-radius:", ";}&[data-focusvisible='true']{box-shadow:inset 0 0 0 2px ", ";position:relative;}}&.wrapping{background-image:linear-gradient( 0deg,", " 0,", " 1px,transparent 1px,transparent 100% ),repeating-linear-gradient( 180deg,transparent,transparent calc(", " - 3px),", " calc(", " - 3px),", " calc(", " - 2px) );&::after{border-left:1px solid ", ";content:'';flex-grow:100;height:calc(", " - 2px);}", "{flex-grow:1;&:first-child{border-bottom-left-radius:0;}&:last-child{border-bottom-right-radius:0;border-top-right-radius:0;}&[aria-pressed='false']:hover:not(:focus),&[aria-pressed='true']:not(:focus){box-shadow:inset 0 -1px 0 0 ", ";}}}"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.colors.background;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.ui3;
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.radii.medium;
}, ButtonItem, function (_ref5) {
  var theme = _ref5.theme;
  return theme.colors.ui3;
}, inputHeight, function (_ref6) {
  var theme = _ref6.theme;
  return theme.radii.medium;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.radii.medium;
}, function (_ref8) {
  var theme = _ref8.theme;
  return theme.radii.medium;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.radii.medium;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.colors.key;
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.colors.background;
}, function (_ref12) {
  var theme = _ref12.theme;
  return theme.colors.background;
}, inputHeight, function (_ref13) {
  var theme = _ref13.theme;
  return theme.colors.ui3;
}, inputHeight, function (_ref14) {
  var theme = _ref14.theme;
  return theme.colors.ui3;
}, inputHeight, function (_ref15) {
  var theme = _ref15.theme;
  return theme.colors.ui3;
}, inputHeight, ButtonItem, function (_ref16) {
  var theme = _ref16.theme;
  return theme.colors.ui3;
});
//# sourceMappingURL=ButtonToggle.js.map