import type { CompatibleHTMLProps, SpaceProps, SizeLarge, SizeMedium, SizeSmall, SizeXSmall, SizeXXSmall } from '@looker/design-tokens';
import type { Placement } from '@popperjs/core';
import type { Property } from 'csstype';
import type { IconProps } from '../Icon';
import type { TooltipProps } from '../Tooltip';
import type { ButtonBaseProps } from './types';
interface IconButtonVariantProps {
    outline?: boolean;
}
export declare type IconButtonSizes = SizeXXSmall | SizeXSmall | SizeSmall | SizeMedium | SizeLarge;
export declare type ToggleColor = 'key' | 'calculation' | 'dimension' | 'measure';
export interface ToggleColorProps {
    toggleColor?: ToggleColor;
}
export interface IconButtonProps extends Omit<CompatibleHTMLProps<HTMLButtonElement>, 'children' | 'type'>, Omit<ButtonBaseProps, 'color'>, IconButtonVariantProps, ToggleColorProps, Pick<IconProps, 'icon'>, SpaceProps {
    type?: 'button' | 'submit' | 'reset';
    outline?: boolean;
    label: TooltipProps['content'];
    size?: IconButtonSizes;
    shape?: 'round' | 'square';
    toggle?: boolean;
    toggleBackground?: boolean;
    tooltipDisabled?: boolean;
    tooltipPlacement?: Placement;
    tooltipWidth?: string;
    tooltipTextAlign?: Property.TextAlign;
}
export {};
