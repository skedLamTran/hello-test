import { useTranslation } from 'react-i18next';
import React, { useContext } from 'react';
import { Close } from '@styled-icons/material/Close';
import styled from 'styled-components';
import { IconButton } from '../Button';
import { DialogContext } from '../Dialog';

var ModalHeaderCloseButtonLayout = function ModalHeaderCloseButtonLayout(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'medium' : _ref$size;

  var _useTranslation = useTranslation('ModalHeaderCloseButton'),
      t = _useTranslation.t;

  var _useContext = useContext(DialogContext),
      busy = _useContext.busy,
      closeModal = _useContext.closeModal,
      id = _useContext.id;

  return React.createElement(IconButton, {
    id: id ? "".concat(id, "-iconButton") : undefined,
    size: size,
    onClick: closeModal,
    label: t('Close'),
    icon: React.createElement(Close, null),
    "data-notooltip": busy || undefined
  });
};

export var ModalHeaderCloseButton = styled(ModalHeaderCloseButtonLayout).withConfig({
  displayName: "ModalHeaderCloseButton",
  componentId: "sc-r02xkz-0"
})([""]);
//# sourceMappingURL=ModalHeaderCloseButton.js.map