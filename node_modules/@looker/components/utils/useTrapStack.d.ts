import type { TrapStackContextProps } from '@looker/components-providers';
import type { Context, Ref } from 'react';
export interface UseTrapStackBaseProps<Element extends HTMLElement = HTMLElement> {
    disabled?: boolean;
    ref?: Ref<Element>;
}
export interface UseTrapStackProps<Element extends HTMLElement = HTMLElement, Options = unknown> extends UseTrapStackBaseProps<Element> {
    context: Context<TrapStackContextProps<Options>>;
    options?: Options;
}
export declare const useTrapStack: <E extends HTMLElement = HTMLElement, O = unknown>({ context, disabled, ref, options, }: UseTrapStackProps<E, O>) => [E | null, (node: E | null) => void];
