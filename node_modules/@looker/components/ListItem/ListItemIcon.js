import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";
var _excluded = ["color", "disabled", "density"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { useContext } from 'react';
import styled, { ThemeContext } from 'styled-components';
import { color as colorHelper } from '@looker/design-tokens';
import { StyledIconBase } from '@styled-icons/styled-icon';
import { IconPlaceholder } from '../Icon';
import { listItemDimensions, listItemIconColor, listItemPaddingY } from './utils';
export var ListItemIcon = styled.div.attrs(function (_ref) {
  var color = _ref.color,
      disabled = _ref.disabled,
      density = _ref.density,
      props = _objectWithoutProperties(_ref, _excluded);

  var theme = useContext(ThemeContext);

  var _listItemDimensions = listItemDimensions(density || theme.defaults.density),
      height = _listItemDimensions.height,
      iconGap = _listItemDimensions.iconGap,
      iconSize = _listItemDimensions.iconSize,
      py = _listItemDimensions.py;

  return _objectSpread(_objectSpread({}, props), {}, {
    color: listItemIconColor(color, disabled),
    density: density,
    height: height,
    iconGap: iconGap,
    iconSize: iconSize,
    py: py
  });
}).withConfig({
  displayName: "ListItemIcon",
  componentId: "sc-12wbh19-0"
})(["align-self:", ";display:flex;margin-right:", ";", " ", " & > svg,", ",", "{flex-grow:0;flex-shrink:0;height:", ";width:", ";}"], function (_ref2) {
  var alignStart = _ref2.alignStart;
  return alignStart ? 'flex-start' : 'center';
}, function (_ref3) {
  var iconGap = _ref3.iconGap,
      theme = _ref3.theme;
  return theme.space[iconGap];
}, function (_ref4) {
  var density = _ref4.density;
  return listItemPaddingY(density);
}, colorHelper, StyledIconBase, IconPlaceholder, function (_ref5) {
  var iconSize = _ref5.iconSize,
      theme = _ref5.theme;
  return theme.sizes[iconSize];
}, function (_ref6) {
  var iconSize = _ref6.iconSize,
      theme = _ref6.theme;
  return theme.sizes[iconSize];
});
//# sourceMappingURL=ListItemIcon.js.map