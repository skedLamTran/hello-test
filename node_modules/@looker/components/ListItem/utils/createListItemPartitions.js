var _excluded = ["accessory", "content"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import "core-js/modules/es.symbol.js";
import "core-js/modules/es.symbol.description.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import React from 'react';
import { ListItemDetail } from '../ListItemDetail';
import { ListItemIcon } from '../ListItemIcon';
import { ListItemLabel } from '../ListItemLabel';
import { getDetailOptions } from './getDetailOptions';
export var createListItemPartitions = function createListItemPartitions(_ref) {
  var color = _ref.color,
      density = _ref.density,
      description = _ref.description,
      detail = _ref.detail,
      disabled = _ref.disabled,
      icon = _ref.icon,
      children = _ref.children,
      truncate = _ref.truncate;
  var iconProps = {
    alignStart: Boolean(description),
    children: icon,
    color: color,
    density: density,
    disabled: disabled
  };
  var labelProps = {
    children: children,
    color: color,
    density: density,
    description: description,
    disabled: disabled,
    truncate: truncate
  };

  var _getDetailOptions = getDetailOptions(detail),
      accessory = _getDetailOptions.accessory,
      content = _getDetailOptions.content,
      options = _objectWithoutProperties(_getDetailOptions, _excluded);

  var renderedDetail = detail && React.createElement(ListItemDetail, options, content);
  var inside = React.createElement(React.Fragment, null, icon && React.createElement(ListItemIcon, iconProps), React.createElement(ListItemLabel, labelProps), !accessory && renderedDetail);
  return [inside, accessory && renderedDetail];
};
//# sourceMappingURL=createListItemPartitions.js.map