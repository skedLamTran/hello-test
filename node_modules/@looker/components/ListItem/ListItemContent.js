import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";
var _excluded = ["children", "itemRole"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled, { css } from 'styled-components';
import { listItemBackgroundColor, listItemPaddingX } from './utils';
var Button = styled.button.attrs(function (_ref) {
  var _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'button' : _ref$type;
  return {
    type: type
  };
}).withConfig({
  displayName: "ListItemContent__Button",
  componentId: "sc-1ietpwm-0"
})(["font-family:inherit;"]);
var Link = styled.a.withConfig({
  displayName: "ListItemContent__Link",
  componentId: "sc-1ietpwm-1"
})([""]);
var Div = styled.div.withConfig({
  displayName: "ListItemContent__Div",
  componentId: "sc-1ietpwm-2"
})([""]);
export var listItemContentCSS = function listItemContentCSS(style) {
  return css(["> ", ",> ", ",> ", "{", "}"], Button, Link, Div, style);
};
export var listItemLabelCSS = listItemContentCSS;

var ListItemContentInternal = function ListItemContentInternal(_ref2) {
  var children = _ref2.children,
      _ref2$itemRole = _ref2.itemRole,
      itemRole = _ref2$itemRole === void 0 ? 'button' : _ref2$itemRole,
      props = _objectWithoutProperties(_ref2, _excluded);

  if (!props.disabled && itemRole === 'link') {
    return React.createElement(Link, props, children);
  } else if (itemRole === 'none') {
    return React.createElement(Div, props, children);
  }

  return React.createElement(Button, _extends({}, props, {
    type: "button"
  }), children);
};

export var ListItemContent = styled(ListItemContentInternal).withConfig({
  displayName: "ListItemContent",
  componentId: "sc-1ietpwm-3"
})(["", " ", " align-items:center;border:none;color:inherit;cursor:", ";display:flex;flex:1;font-size:inherit;font-weight:inherit;margin:0;min-width:0;outline:none;padding:0;", " position:relative;text-align:left;text-decoration:none;width:100%;&:hover,&:focus{color:inherit;text-decoration:none;}"], listItemBackgroundColor, function (_ref3) {
  var focusVisible = _ref3.focusVisible,
      theme = _ref3.theme;
  return focusVisible && "\n    &::after {\n      bottom: 0;\n      box-shadow: inset 0 0 0 2px ".concat(theme.colors.keyFocus, ";\n      content: '';\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      z-index: 1;\n    }\n  ");
}, function (_ref4) {
  var cursorPointer = _ref4.cursorPointer;
  return cursorPointer ? 'pointer' : undefined;
}, function (_ref5) {
  var density = _ref5.density;
  return listItemPaddingX(density);
});
//# sourceMappingURL=ListItemContent.js.map