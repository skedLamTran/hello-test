import type { CompatibleHTMLProps, DensityRamp, FontSizes, LineHeights, SpacingSizes } from '@looker/design-tokens';
import type { ReactNode } from 'react';
import type { IconSize, IconType } from '../Icon';
import type { ListColor } from '../List';
import type { TruncateConfigProp } from '../Truncate';
import type { HoverDisclosureProps } from '../utils/HoverDisclosure';
export interface ListItemDimensions {
    descriptionFontSize: FontSizes;
    descriptionLineHeight: LineHeights;
    height: number;
    px: SpacingSizes;
    py: SpacingSizes | '0.375rem';
    iconGap: SpacingSizes;
    iconSize: IconSize;
    labelFontSize: FontSizes;
    labelLineHeight: LineHeights;
}
export declare const listItemDimensionKeys: string[];
export declare const listItemColorAppliesToLabel: string[];
export declare const listItemColorOptions: string[];
export declare type ListItemColor = ListColor | string;
export declare type ListItemColorProp = {
    color?: ListItemColor;
};
export declare type ListItemStatefulProps = {
    disabled?: boolean;
    hovered?: boolean;
    selected?: boolean;
};
export declare type ListItemDetailConfig = ReactNode | {
    content: ReactNode;
    options: ListItemDetailOptions;
};
export interface ListItemDetailOptions extends Pick<HoverDisclosureProps, 'width'> {
    accessory?: boolean;
    hoverDisclosure?: boolean;
    padding?: boolean;
}
export declare type ListItemRole = 'button' | 'link' | 'none';
export declare type ListItemProps = CompatibleHTMLProps<HTMLElement> & ListItemColorProp & ListItemStatefulProps & {
    density?: DensityRamp;
    description?: ReactNode;
    detail?: ListItemDetailConfig;
    icon?: IconType;
    itemRole?: ListItemRole;
    truncate?: TruncateConfigProp;
};
