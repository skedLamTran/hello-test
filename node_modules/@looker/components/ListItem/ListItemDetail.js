import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
var _excluded = ["hoverDisclosure", "width"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import styled from 'styled-components';
import React from 'react';
import { HoverDisclosure } from '../utils/HoverDisclosure';
export var ListItemDetail = styled(function (_ref) {
  var hoverDisclosure = _ref.hoverDisclosure,
      width = _ref.width,
      props = _objectWithoutProperties(_ref, _excluded);

  return React.createElement(HoverDisclosure, {
    width: width,
    visible: !hoverDisclosure
  }, React.createElement("div", props));
}).withConfig({
  displayName: "ListItemDetail",
  componentId: "sc-tpflji-0"
})(["align-items:center;color:", ";display:flex;font-size:", ";height:100%;margin-left:auto;"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.colors.text2;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.fontSizes.xsmall;
});
//# sourceMappingURL=ListItemDetail.js.map