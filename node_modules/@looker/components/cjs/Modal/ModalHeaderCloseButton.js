"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalHeaderCloseButton = void 0;

var _reactI18next = require("react-i18next");

var _react = _interopRequireWildcard(require("react"));

var _Close = require("@styled-icons/material/Close");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Button = require("../Button");

var _Dialog = require("../Dialog");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const ModalHeaderCloseButtonLayout = ({
  size = 'medium'
}) => {
  const _useTranslation = (0, _reactI18next.useTranslation)('ModalHeaderCloseButton'),
        t = _useTranslation.t;

  const _useContext = (0, _react.useContext)(_Dialog.DialogContext),
        busy = _useContext.busy,
        closeModal = _useContext.closeModal,
        id = _useContext.id;

  return _react.default.createElement(_Button.IconButton, {
    id: id ? `${id}-iconButton` : undefined,
    size: size,
    onClick: closeModal,
    label: t('Close'),
    icon: _react.default.createElement(_Close.Close, null),
    "data-notooltip": busy || undefined
  });
};

const ModalHeaderCloseButton = (0, _styledComponents.default)(ModalHeaderCloseButtonLayout).withConfig({
  displayName: "ModalHeaderCloseButton",
  componentId: "sc-r02xkz-0"
})([""]);
exports.ModalHeaderCloseButton = ModalHeaderCloseButton;
//# sourceMappingURL=ModalHeaderCloseButton.js.map