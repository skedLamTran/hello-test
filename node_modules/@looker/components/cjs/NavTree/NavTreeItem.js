"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavTreeItem = void 0;

require("core-js/modules/es.array.includes.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _generateIndent = require("../Tree/utils/generateIndent");

var _TreeContext = require("../Tree/TreeContext");

var _ListItem = require("../ListItem");

var _Tree = require("../Tree");

var _accordionDimensions2 = require("../Accordion2/accordionDimensions");

var _TreeItemContent = require("../Tree/TreeItemContent");

var _NavTree = require("./NavTree");

const _excluded = ["truncate"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const IndentOverrideTreeItem = (0, _styledComponents.default)(_Tree.TreeItem).withConfig({
  shouldForwardProp: prop => !['depth', 'density', 'iconGap', 'indicatorGap', 'parentIcon', 'px'].includes(prop)
}).withConfig({
  displayName: "NavTreeItem__IndentOverrideTreeItem",
  componentId: "sc-1yihvfy-0"
})(["", "{", "}", "{padding-right:", ";}"], _TreeItemContent.TreeItemContent, ({
  depth = 0,
  density,
  iconGap,
  indicatorGap,
  parentIcon,
  theme
}) => `padding-left: calc(${(0, _generateIndent.generateIndentCalculation)(parentIcon ? depth + 1 : depth, density || theme.defaults.density, theme)} + ${theme.space[iconGap]} - ${theme.space[indicatorGap]} + ${_NavTree.INDICATOR_SPACER});`, _ListItem.ListItemDetail, ({
  px,
  theme
}) => theme.space[px]);
const NavTreeItem = (0, _styledComponents.default)(_ref => {
  let _ref$truncate = _ref.truncate,
      truncate = _ref$truncate === void 0 ? true : _ref$truncate,
      props = _objectWithoutProperties(_ref, _excluded);

  const theme = (0, _react.useContext)(_styledComponents.ThemeContext);

  const _useContext = (0, _react.useContext)(_TreeContext.TreeContext),
        depth = _useContext.depth;

  const _listItemDimensions = (0, _ListItem.listItemDimensions)(theme.defaults.density),
        iconGap = _listItemDimensions.iconGap,
        px = _listItemDimensions.px;

  const _accordionDimensions = (0, _accordionDimensions2.accordionDimensions)(),
        indicatorGap = _accordionDimensions.indicatorGap;

  return _react.default.createElement(IndentOverrideTreeItem, _extends({
    depth: depth,
    iconGap: iconGap,
    indicatorGap: indicatorGap,
    itemRole: props.href ? 'link' : props.itemRole,
    px: px,
    truncate: truncate
  }, props));
}).withConfig({
  displayName: "NavTreeItem",
  componentId: "sc-1yihvfy-1"
})([""]);
exports.NavTreeItem = NavTreeItem;
//# sourceMappingURL=NavTreeItem.js.map