"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tabs2 = void 0;

require("core-js/modules/es.array.map.js");

require("core-js/modules/es.array.includes.js");

require("core-js/modules/es.string.includes.js");

require("core-js/modules/es.array.iterator.js");

var _react = _interopRequireWildcard(require("react"));

var _Tab = require("./Tab2");

var _TabList = require("./TabList2");

var _TabPanels = require("./TabPanels2");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const getTabsData = children => _react.Children.map(children, child => ({
  children: child.props.children,
  disabled: child.props.disabled,
  id: child.props.id || child.props.label,
  label: child.props.label
}));

const getFallbackTabId = (enabledTabIds, intendedTabId) => {
  const enabledTabIdsArr = JSON.parse(enabledTabIds);
  if (enabledTabIds.length === 0) return undefined;
  if (intendedTabId && enabledTabIdsArr.includes(intendedTabId)) return intendedTabId;
  return enabledTabIdsArr[0];
};

const Tabs2 = ({
  children,
  onTabChange,
  defaultTabId,
  distributed = false,
  tabId: propsTabId
}) => {
  const initialTabs = getTabsData(children);

  const _useState = (0, _react.useState)(initialTabs),
        _useState2 = _slicedToArray(_useState, 2),
        tabs = _useState2[0],
        setTabs = _useState2[1];

  const enabledTabIds = JSON.stringify(tabs.reduce((acc, tab) => tab.disabled ? acc : [...acc, tab.id], []));

  const _useState3 = (0, _react.useState)(getFallbackTabId(enabledTabIds, defaultTabId)),
        _useState4 = _slicedToArray(_useState3, 2),
        currentTabId = _useState4[0],
        setCurrentTabId = _useState4[1];

  const tabId = propsTabId || currentTabId;
  (0, _react.useEffect)(() => {
    setTabs(getTabsData(children));
  }, [children]);
  (0, _react.useEffect)(() => {
    const fallbackTabId = getFallbackTabId(enabledTabIds, currentTabId);

    if (fallbackTabId !== currentTabId) {
      setCurrentTabId(fallbackTabId);
    }
  }, [currentTabId, enabledTabIds]);

  const handleTabChange = draftId => onTabChange ? onTabChange(draftId) : setCurrentTabId(draftId);

  const labels = tabs.map(({
    disabled,
    label,
    id
  }, index) => _react.default.createElement(_Tab.Tab2, {
    disabled: disabled,
    label: label,
    key: index,
    selected: id === tabId,
    onSelect: () => handleTabChange(id || label)
  }, label));
  const currentTab = tabs.find(tab => tab.id === tabId);
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_TabList.TabList2, {
    distribute: distributed
  }, labels), currentTab && _react.default.createElement(_TabPanels.TabPanels2, {
    id: currentTab.id
  }, currentTab.children));
};

exports.Tabs2 = Tabs2;
//# sourceMappingURL=Tabs2.js.map