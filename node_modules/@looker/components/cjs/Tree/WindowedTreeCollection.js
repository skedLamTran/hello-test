"use strict";

require("core-js/modules/es.array.index-of.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WindowedTreeCollection = void 0;

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _useWindowedTree2 = require("./utils/useWindowedTree");

var _TreeCollectionContext = require("./TreeCollectionContext");

var _TreeCollection = require("./TreeCollection");

const _excluded = ["density", "trees"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const WindowedTreeCollectionInternal = _ref => {
  let density = _ref.density,
      trees = _ref.trees,
      props = _objectWithoutProperties(_ref, _excluded);

  const _useWindowedTree = (0, _useWindowedTree2.useWindowedTree)({
    density,
    trees
  }),
        content = _useWindowedTree.content,
        contextValue = _useWindowedTree.contextValue,
        ref = _useWindowedTree.ref;

  return _react.default.createElement(_TreeCollectionContext.TreeCollectionContext.Provider, {
    value: contextValue
  }, _react.default.createElement(_TreeCollection.TreeCollection, _extends({}, (0, _designTokens.omitStyledProps)(props), {
    ref: ref
  }), content));
};

const WindowedTreeCollection = (0, _styledComponents.default)(WindowedTreeCollectionInternal).withConfig({
  displayName: "WindowedTreeCollection",
  componentId: "sc-1ur0g0h-0"
})(["", " ", " overflow:auto;"], _designTokens.height, _designTokens.width);
exports.WindowedTreeCollection = WindowedTreeCollection;
//# sourceMappingURL=WindowedTreeCollection.js.map