"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LkFieldItem = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Layout = require("../Layout");

var _utils = require("../ListItem/utils");

var _utils2 = require("../utils");

var _TreeContext = require("../Tree/TreeContext");

var _LkFieldItemContent = require("./LkFieldItemContent");

var _LkFieldItemLabel = require("./LkFieldItemLabel");

var _defaults = require("./defaults");

const _excluded = ["className", "color", "disabled", "onBlur", "onClick", "onFocus", "onKeyDown", "onKeyUp", "onMouseEnter", "onMouseLeave", "selected"],
      _excluded2 = ["focusVisible"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const LkFieldItem = (0, _styledComponents.default)(_ref => {
  let className = _ref.className,
      color = _ref.color,
      disabled = _ref.disabled,
      onBlur = _ref.onBlur,
      onClick = _ref.onClick,
      onFocus = _ref.onFocus,
      onKeyDown = _ref.onKeyDown,
      onKeyUp = _ref.onKeyUp,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      selected = _ref.selected,
      restProps = _objectWithoutProperties(_ref, _excluded);

  const _useContext = (0, _react.useContext)(_TreeContext.TreeContext),
        depth = _useContext.depth;

  const _useState = (0, _react.useState)(false),
        _useState2 = _slicedToArray(_useState, 2),
        hovered = _useState2[0],
        setHovered = _useState2[1];

  const handleWrapperMouseEnter = (0, _utils2.useWrapEvent)(() => setHovered(true), onMouseEnter);
  const handleWrapperMouseLeave = (0, _utils2.useWrapEvent)(() => setHovered(false), onMouseLeave);

  const handleWrapperFocus = () => setHovered(true);

  const handleWrapperBlur = event => {
    const nextFocusTarget = (0, _utils2.getNextFocusTarget)(event);

    if (nextFocusTarget && !event.currentTarget.contains(nextFocusTarget)) {
      setHovered(false);
    }
  };

  const _useFocusVisible = (0, _utils2.useFocusVisible)({
    onBlur,
    onKeyUp
  }),
        focusVisible = _useFocusVisible.focusVisible,
        focusVisibleHandlers = _objectWithoutProperties(_useFocusVisible, _excluded2);

  const statefulProps = {
    color,
    disabled,
    hovered,
    selected
  };

  const _partitionAriaProps = (0, _utils2.partitionAriaProps)(restProps),
        _partitionAriaProps2 = _slicedToArray(_partitionAriaProps, 2),
        ariaProps = _partitionAriaProps2[0],
        wrapperProps = _partitionAriaProps2[1];

  const _createListItemPartit = (0, _utils.createListItemPartitions)(_objectSpread(_objectSpread({
    density: _defaults.lkFieldItemDensity
  }, restProps), statefulProps)),
        _createListItemPartit2 = _slicedToArray(_createListItemPartit, 2),
        inside = _createListItemPartit2[0],
        outside = _createListItemPartit2[1];

  return _react.default.createElement(_utils2.HoverDisclosureContext.Provider, {
    value: {
      visible: hovered
    }
  }, _react.default.createElement(_Layout.Flex, _extends({
    as: "li",
    className: className,
    onBlur: handleWrapperBlur,
    onFocus: handleWrapperFocus,
    onMouseEnter: handleWrapperMouseEnter,
    onMouseLeave: handleWrapperMouseLeave
  }, wrapperProps), _react.default.createElement(_LkFieldItemContent.LkFieldItemContent, _extends({
    "aria-selected": selected,
    depth: depth + 1,
    focusVisible: focusVisible,
    onClick: onClick,
    onFocus: onFocus,
    onKeyDown: onKeyDown,
    tabIndex: -1
  }, ariaProps, focusVisibleHandlers, statefulProps), _react.default.createElement(_LkFieldItemLabel.LkFieldItemLabel, statefulProps, inside)), outside));
}).withConfig({
  displayName: "LkFieldItem",
  componentId: "sc-bwajwd-0"
})([""]);
exports.LkFieldItem = LkFieldItem;
//# sourceMappingURL=LkFieldItem.js.map