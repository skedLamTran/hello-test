"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SurfaceBase = exports.surfaceTransition = void 0;

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _utils = require("../utils");

var _DialogContext = require("./DialogContext");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const SurfaceLayout = props => {
  const _useContext = (0, _react.useContext)(_DialogContext.DialogContext),
        closeModal = _useContext.closeModal;

  const ref = (0, _react.useRef)(null);
  (0, _utils.useGlobalHotkeys)('esc', closeModal, ref);
  return _react.default.createElement("div", _extends({
    "data-overlay-surface": true,
    ref: ref,
    tabIndex: -1
  }, (0, _designTokens.omitStyledProps)(props)));
};

const surfaceTransition = () => (0, _styledComponents.css)(["", ""], ({
  theme
}) => `${theme.transitions.moderate}ms ${theme.easings.ease}`);

exports.surfaceTransition = surfaceTransition;
const SurfaceBase = (0, _styledComponents.default)(SurfaceLayout).attrs(() => ({
  'aria-modal': true,
  role: 'dialog'
})).withConfig({
  displayName: "SurfaceBase",
  componentId: "sc-7dy58h-0"
})(["", " background:", ";color:", ";display:flex;flex-direction:column;&:focus{outline:none;}"], _designTokens.reset, ({
  theme
}) => theme.colors.background, ({
  theme
}) => theme.colors.text);
exports.SurfaceBase = SurfaceBase;
//# sourceMappingURL=SurfaceBase.js.map