"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Status = exports.getIntentLabel = void 0;

var _CheckCircle = require("@styled-icons/material/CheckCircle");

var _Error = require("@styled-icons/material/Error");

var _Info = require("@styled-icons/material/Info");

var _Warning = require("@styled-icons/material/Warning");

var _designTokens = require("@looker/design-tokens");

var _omit = _interopRequireDefault(require("lodash/omit"));

var _react = _interopRequireWildcard(require("react"));

var _reactI18next = require("react-i18next");

var _styledComponents = _interopRequireDefault(require("styled-components"));

const _excluded = ["className", "title", "intent"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const getIntentIcon = intent => {
  switch (intent) {
    case 'critical':
      return _Error.Error;

    case 'positive':
      return _CheckCircle.CheckCircle;

    case 'warn':
      return _Warning.Warning;

    case 'neutral':
    case 'inform':
    default:
      return _Info.Info;
  }
};

const getIntentLabel = (t, intent) => {
  switch (intent) {
    case 'critical':
      return t('Error', {
        ns: 'GetIntentLabel'
      });

    case 'inform':
      return t('Inform', {
        ns: 'GetIntentLabel'
      });

    case 'positive':
      return t('Success', {
        ns: 'GetIntentLabel'
      });

    case 'warn':
      return t('Warning', {
        ns: 'GetIntentLabel'
      });

    case 'neutral':
    default:
      return undefined;
  }
};

exports.getIntentLabel = getIntentLabel;
const defaultIntent = 'neutral';
const StatusLayout = (0, _react.forwardRef)((_ref, ref) => {
  let className = _ref.className,
      title = _ref.title,
      _ref$intent = _ref.intent,
      intent = _ref$intent === void 0 ? defaultIntent : _ref$intent,
      props = _objectWithoutProperties(_ref, _excluded);

  const _useTranslation = (0, _reactI18next.useTranslation)('Status'),
        t = _useTranslation.t;

  const Component = getIntentIcon(intent);
  return _react.default.createElement(Component, _extends({}, (0, _omit.default)(props, 'size', 'crossOrigin'), {
    className: className,
    ref: ref,
    title: !props['aria-describedby'] ? title || getIntentLabel(t, intent) : undefined
  }));
});
StatusLayout.displayName = 'StatusLayout';
const Status = (0, _styledComponents.default)(StatusLayout).attrs(({
  intent = defaultIntent,
  size = 'medium'
}) => ({
  color: intent,
  size
})).withConfig({
  displayName: "Status",
  componentId: "sc-hjs0z2-0"
})(["", " ", " flex-shrink:0;"], _designTokens.color, _designTokens.size);
exports.Status = Status;
//# sourceMappingURL=Status.js.map