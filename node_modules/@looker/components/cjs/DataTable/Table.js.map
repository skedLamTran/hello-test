{"version":3,"sources":["../../../src/DataTable/Table.tsx"],"names":["TableLayout","props","t","noResultsDisplayText","caption","children","className","columnsVisible","headerRowId","noResultsDisplay","state","element","ref","overflow","length","noResultsContent","interimState","navProps","axis","getNextFocus","selectColumn","css","select","densityTarget","theme","space","u2","actionsColumn","stickyColumns","firstColumnStuck","Table","fonts","body","fontSizes","small","u4","colors","text4","columns","InterimState","styled","div","u8","TableScroll"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { useTranslation } from 'react-i18next'\nimport { densityTarget } from '@looker/design-tokens'\nimport type { FC } from 'react'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\nimport { Spinner } from '../Spinner'\nimport { Heading } from '../Text'\nimport { useArrowKeyNav, useCallbackRef, useIsTruncated } from '../utils'\nimport {\n  getNumericColumnIndices,\n  numericColumnCSS,\n} from './utils/dataTableFormatting'\nimport type { DataTableProps } from './types'\nimport { DataTableHeader } from './Header/DataTableHeader'\nimport { edgeShadow } from './utils/edgeShadow'\nimport { getNextFocus } from './getNextFocus'\n\nexport interface TableProps extends DataTableProps {\n  /**\n   * I18n recommended: content that is user visible should be treated for i18n\n   */\n  caption: string\n  columnsVisible: string[]\n}\n\nexport const TableLayout: FC<TableProps> = props => {\n  const { t } = useTranslation('DataTable')\n  const noResultsDisplayText = t('No Results')\n  const {\n    caption,\n    children,\n    className,\n    columnsVisible,\n    headerRowId,\n    noResultsDisplay = noResultsDisplayText,\n    state,\n  } = props\n  const [element, ref] = useCallbackRef()\n  const overflow = useIsTruncated(element, columnsVisible.length)\n\n  const noResultsContent =\n    typeof noResultsDisplay === 'string' ? (\n      <Heading color=\"text1\">{noResultsDisplay}</Heading>\n    ) : (\n      noResultsDisplay\n    )\n\n  const interimState = state && (\n    <InterimState>\n      {state === 'loading' ? <Spinner /> : noResultsContent}\n    </InterimState>\n  )\n\n  const navProps = useArrowKeyNav<HTMLTableElement>({\n    axis: 'both',\n    getNextFocus: getNextFocus,\n  })\n\n  return (\n    <>\n      <TableScroll ref={ref}>\n        <table\n          aria-label={caption}\n          className={overflow ? `${className} overflow` : className}\n          {...navProps}\n        >\n          <thead>\n            <DataTableHeader id={headerRowId} />\n          </thead>\n          {!interimState && <tbody>{children}</tbody>}\n        </table>\n      </TableScroll>\n      {interimState}\n    </>\n  )\n}\n\n/**\n * Apply specialized styling to the first column if `select` mode is active\n * (and therefore the first column is the Checkbox for selection)\n */\nconst selectColumn = css<TableProps>`\n  ${({ select }) =>\n    select\n      ? css`\n          &:first-child {\n            max-width: ${densityTarget};\n            min-width: ${densityTarget};\n            width: ${densityTarget};\n          }\n          &:nth-child(2) {\n            padding-left: ${({ theme }) => theme.space.u2};\n          }\n        `\n      : css`\n          /* stylelint-disable-next-line  */\n          &:first-child {\n            max-width: 0;\n            min-width: 0;\n          }\n        `}\n`\n\n/**\n * Apply specialized styling to the last column where actions are presented.\n * NOTE: If the row does not include actions the column is still rendered.\n *\n * `width: 100%` is specified on this column ensures that the other columns\n * only consume the space needed to meet their specified size or min-content.\n */\nconst actionsColumn = css`\n  &:last-child {\n    padding: 0;\n    width: 100%;\n  }\n`\n\n/**\n * Make some columns \"sticky\" depending on DataTable configuration\n * `select` && `stickyFirstColumn` = two columns stuck\n * `select` OR `stickyFirstColumn` = first column stuck\n * !`select` && !`stickyFirstColumn` = no columns stuck\n *\n * Actions are always stuck if present\n * @TODO - Don't stick last column if DataTable doesn't have actions\n */\nconst stickyColumns = css<TableProps>`\n  ${({ select, firstColumnStuck }) =>\n    (select || firstColumnStuck) &&\n    css`\n      &:first-child {\n        left: 0;\n        position: sticky;\n        ${firstColumnStuck === false && edgeShadow()}\n      }\n    `}\n\n  ${({ select, firstColumnStuck }) =>\n    firstColumnStuck &&\n    css`\n      &:nth-child(2) {\n        left: ${select ? densityTarget : 0};\n        position: sticky;\n        ${edgeShadow()}\n      }\n    `}\n\n  &:last-child {\n    ${edgeShadow('right')}\n    position: sticky;\n    right: 0;\n  }\n`\n\nexport const Table = styled(TableLayout)`\n  border-collapse: initial;\n  border-spacing: 0;\n  font-family: ${({ theme }) => theme.fonts.body};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  line-height: 1;\n  width: 100%;\n\n  td,\n  th {\n    height: ${densityTarget}; /* acts like min-height */\n    padding: ${({ theme: { space } }) => `${space.u2}  ${space.u4}`};\n\n    :first-child,\n    :last-child {\n      padding: 0;\n    }\n\n    ${selectColumn}\n    ${actionsColumn}\n  }\n\n  tbody td {\n    color: ${({ theme }) => theme.colors.text4};\n  }\n\n  &.overflow {\n    tr {\n      td,\n      th {\n        ${stickyColumns}\n        height: initial;\n      }\n    }\n  }\n\n  ${({ columns, columnsVisible }) =>\n    numericColumnCSS(getNumericColumnIndices(columns, columnsVisible))}\n`\n\nconst InterimState = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: ${({ theme }) => theme.space.u8};\n`\n\nexport const TableScroll = styled.div`\n  overflow-x: auto;\n`\n"],"file":"Table.js"}