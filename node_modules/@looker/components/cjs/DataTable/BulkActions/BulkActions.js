"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BulkActions = void 0;

var _reactI18next = require("react-i18next");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ArrowDropDown = require("@styled-icons/material/ArrowDropDown");

var _Button = require("../../Button");

var _Layout = require("../../Layout");

var _Menu = require("../../Menu");

var _Text = require("../../Text");

var _DataTableContext = require("../DataTableContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const BulkActionsLayout = ({
  actions,
  className,
  onTotalClearAll,
  onTotalSelectAll,
  pageCount,
  totalCount
}) => {
  const _useTranslation = (0, _reactI18next.useTranslation)('BulkActions'),
        t = _useTranslation.t;

  const _useContext = (0, _react.useContext)(_DataTableContext.DataTableContext),
        select = _useContext.select;

  const selectedItemCount = select ? select.selectedItems.length : 0;
  let message;

  if (selectedItemCount < pageCount) {
    message = t('SelectedCountOfTotalDisplayed', {
      pageCount: Number(pageCount),
      selectedItemCount: Number(selectedItemCount)
    });
  } else if (selectedItemCount === pageCount) {
    message = t('AllPageCountDisplayedSelected', {
      pageCount: Number(pageCount)
    });
  } else if (totalCount && selectedItemCount === totalCount) {
    message = t('AllTotalCountSelected', {
      totalCount: Number(totalCount)
    });
  }

  const selectedItemsText = _react.default.createElement(_Text.Span, {
    color: "text2",
    fontSize: "xsmall"
  }, message);

  const selectTotalResultsButton = _react.default.createElement(_Button.ButtonTransparent, {
    onClick: selectedItemCount === totalCount ? onTotalClearAll : onTotalSelectAll
  }, _react.default.createElement(_Text.Span, {
    fontWeight: "semiBold",
    fontSize: "xsmall"
  }, selectedItemCount === totalCount ? t('Clear Selection') : t('SelectAllCountResults', {
    totalCount: Number(totalCount)
  })));

  return _react.default.createElement("div", {
    className: className
  }, _react.default.createElement(_Menu.Menu, {
    content: actions
  }, _react.default.createElement(_Button.Button, {
    iconAfter: _react.default.createElement(_ArrowDropDown.ArrowDropDown, null),
    size: "xsmall"
  }, t('Bulk Actions'))), _react.default.createElement(_Layout.Space, {
    gap: "u3",
    justifyContent: "center"
  }, selectedItemsText, selectTotalResultsButton));
};

const BulkActions = (0, _styledComponents.default)(BulkActionsLayout).withConfig({
  displayName: "BulkActions",
  componentId: "sc-z1cplu-0"
})(["align-items:center;background-color:", ";border-bottom:solid 1px ", ";display:flex;height:3.25rem;justify-content:center;position:relative;", "{left:", ";position:absolute;}"], ({
  theme
}) => theme.colors.ui1, ({
  theme
}) => theme.colors.ui2, _Button.Button, ({
  theme
}) => theme.space.u3);
exports.BulkActions = BulkActions;
//# sourceMappingURL=BulkActions.js.map