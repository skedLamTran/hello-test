"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableScroll = exports.Table = exports.TableLayout = void 0;

var _reactI18next = require("react-i18next");

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _Spinner = require("../Spinner");

var _Text = require("../Text");

var _utils = require("../utils");

var _dataTableFormatting = require("./utils/dataTableFormatting");

var _DataTableHeader = require("./Header/DataTableHeader");

var _edgeShadow = require("./utils/edgeShadow");

var _getNextFocus = require("./getNextFocus");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const TableLayout = props => {
  const _useTranslation = (0, _reactI18next.useTranslation)('DataTable'),
        t = _useTranslation.t;

  const noResultsDisplayText = t('No Results');
  const caption = props.caption,
        children = props.children,
        className = props.className,
        columnsVisible = props.columnsVisible,
        headerRowId = props.headerRowId,
        _props$noResultsDispl = props.noResultsDisplay,
        noResultsDisplay = _props$noResultsDispl === void 0 ? noResultsDisplayText : _props$noResultsDispl,
        state = props.state;

  const _useCallbackRef = (0, _utils.useCallbackRef)(),
        _useCallbackRef2 = _slicedToArray(_useCallbackRef, 2),
        element = _useCallbackRef2[0],
        ref = _useCallbackRef2[1];

  const overflow = (0, _utils.useIsTruncated)(element, columnsVisible.length);
  const noResultsContent = typeof noResultsDisplay === 'string' ? _react.default.createElement(_Text.Heading, {
    color: "text1"
  }, noResultsDisplay) : noResultsDisplay;

  const interimState = state && _react.default.createElement(InterimState, null, state === 'loading' ? _react.default.createElement(_Spinner.Spinner, null) : noResultsContent);

  const navProps = (0, _utils.useArrowKeyNav)({
    axis: 'both',
    getNextFocus: _getNextFocus.getNextFocus
  });
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(TableScroll, {
    ref: ref
  }, _react.default.createElement("table", _extends({
    "aria-label": caption,
    className: overflow ? `${className} overflow` : className
  }, navProps), _react.default.createElement("thead", null, _react.default.createElement(_DataTableHeader.DataTableHeader, {
    id: headerRowId
  })), !interimState && _react.default.createElement("tbody", null, children))), interimState);
};

exports.TableLayout = TableLayout;
const selectColumn = (0, _styledComponents.css)(["", ""], ({
  select
}) => select ? (0, _styledComponents.css)(["&:first-child{max-width:", ";min-width:", ";width:", ";}&:nth-child(2){padding-left:", ";}"], _designTokens.densityTarget, _designTokens.densityTarget, _designTokens.densityTarget, ({
  theme
}) => theme.space.u2) : (0, _styledComponents.css)(["&:first-child{max-width:0;min-width:0;}"]));
const actionsColumn = (0, _styledComponents.css)(["&:last-child{padding:0;width:100%;}"]);
const stickyColumns = (0, _styledComponents.css)(["", " ", " &:last-child{", " position:sticky;right:0;}"], ({
  select,
  firstColumnStuck
}) => (select || firstColumnStuck) && (0, _styledComponents.css)(["&:first-child{left:0;position:sticky;", "}"], firstColumnStuck === false && (0, _edgeShadow.edgeShadow)()), ({
  select,
  firstColumnStuck
}) => firstColumnStuck && (0, _styledComponents.css)(["&:nth-child(2){left:", ";position:sticky;", "}"], select ? _designTokens.densityTarget : 0, (0, _edgeShadow.edgeShadow)()), (0, _edgeShadow.edgeShadow)('right'));
const Table = (0, _styledComponents.default)(TableLayout).withConfig({
  displayName: "Table",
  componentId: "sc-tf9jqn-0"
})(["border-collapse:initial;border-spacing:0;font-family:", ";font-size:", ";line-height:1;width:100%;td,th{height:", ";padding:", ";:first-child,:last-child{padding:0;}", " ", "}tbody td{color:", ";}&.overflow{tr{td,th{", " height:initial;}}}", ""], ({
  theme
}) => theme.fonts.body, ({
  theme
}) => theme.fontSizes.small, _designTokens.densityTarget, ({
  theme: {
    space
  }
}) => `${space.u2}  ${space.u4}`, selectColumn, actionsColumn, ({
  theme
}) => theme.colors.text4, stickyColumns, ({
  columns,
  columnsVisible
}) => (0, _dataTableFormatting.numericColumnCSS)((0, _dataTableFormatting.getNumericColumnIndices)(columns, columnsVisible)));
exports.Table = Table;

const InterimState = _styledComponents.default.div.withConfig({
  displayName: "Table__InterimState",
  componentId: "sc-tf9jqn-1"
})(["align-items:center;display:flex;justify-content:center;padding:", ";"], ({
  theme
}) => theme.space.u8);

const TableScroll = _styledComponents.default.div.withConfig({
  displayName: "Table__TableScroll",
  componentId: "sc-tf9jqn-2"
})(["overflow-x:auto;"]);

exports.TableScroll = TableScroll;
//# sourceMappingURL=Table.js.map