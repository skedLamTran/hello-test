"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataTableHeaderCell = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ExpandLess = require("@styled-icons/material-rounded/ExpandLess");

var _ExpandMore = require("@styled-icons/material-rounded/ExpandMore");

var _DataTableContext = require("../DataTableContext");

var _Icon = require("../../Icon");

var _Space = require("../../Layout/Space");

var _Tooltip = require("../../Tooltip");

var _Truncate = require("../../Truncate");

var _utils = require("../../utils");

var _VisuallyHidden = require("../../VisuallyHidden");

var _columnSize = require("../Column/columnSize");

var _FocusableCell = require("../Column/FocusableCell");

const _excluded = ["role"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const DataTableHeaderCellLayout = (0, _react.forwardRef)(({
  canSort,
  className,
  title,
  titleIcon,
  columnId,
  size,
  sortDirection,
  type
}, ref) => {
  const _useContext = (0, _react.useContext)(_DataTableContext.DataTableContext),
        onSort = _useContext.onSort;

  const onClick = () => {
    if (onSort && canSort) {
      onSort(columnId, sortDirection === 'asc' ? 'desc' : 'asc');
    }
  };

  const _useClickable = (0, _utils.useClickable)({
    onClick
  }),
        role = _useClickable.role,
        clickableProps = _objectWithoutProperties(_useClickable, _excluded);

  let label;

  if (titleIcon) {
    label = _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_VisuallyHidden.VisuallyHidden, null, title), _react.default.createElement(_Tooltip.Tooltip, {
      content: title
    }, _react.default.createElement(_Icon.Icon, {
      color: "ui3",
      icon: titleIcon,
      size: "small"
    })));
  } else if (size && (0, _columnSize.sizeInfersTruncate)(size)) {
    label = _react.default.createElement(_Truncate.Truncate, {
      width: "auto"
    }, title);
  } else {
    label = title;
  }

  let ariaSort = 'none';

  if (sortDirection === 'asc') {
    ariaSort = 'ascending';
  } else if (sortDirection === 'desc') {
    ariaSort = 'descending';
  }

  return _react.default.createElement(_FocusableCell.FocusableCell, _extends({
    as: "th",
    "aria-sort": ariaSort,
    className: className,
    ref: ref,
    style: {
      cursor: canSort ? 'pointer' : undefined
    }
  }, clickableProps), _react.default.createElement(_Space.Space, {
    gap: "u1",
    reverse: type === 'number'
  }, label, sortDirection && _react.default.createElement(_Icon.Icon, {
    icon: sortDirection === 'asc' ? _react.default.createElement(_ExpandLess.ExpandLess, null) : _react.default.createElement(_ExpandMore.ExpandMore, null),
    size: "small"
  })));
});
DataTableHeaderCellLayout.displayName = 'DataTableHeaderCellLayout';
const DataTableHeaderCell = (0, _styledComponents.default)(DataTableHeaderCellLayout).withConfig({
  displayName: "DataTableHeaderCell",
  componentId: "sc-1e4utgn-0"
})(["", " border-bottom:solid 1px ", ";color:", ";font-weight:", ";text-align:left;"], _columnSize.columnSize, ({
  theme
}) => theme.colors.ui2, ({
  theme
}) => theme.colors.text5, ({
  theme
}) => theme.fontWeights.semiBold);
exports.DataTableHeaderCell = DataTableHeaderCell;
//# sourceMappingURL=DataTableHeaderCell.js.map