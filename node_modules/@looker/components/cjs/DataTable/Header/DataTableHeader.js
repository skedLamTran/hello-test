"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataTableHeader = void 0;

require("core-js/modules/es.array.map.js");

var _react = _interopRequireWildcard(require("react"));

var _useID = require("../../utils/useID");

var _DataTableRow = require("../Item/DataTableRow");

var _DataTableContext = require("../DataTableContext");

var _DataTableHeaderCell = require("./DataTableHeaderCell");

const _excluded = ["id"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const DataTableHeader = ({
  id
}) => {
  const _useContext = (0, _react.useContext)(_DataTableContext.DataTableContext),
        allSelected = _useContext.allSelected,
        columns = _useContext.columns,
        select = _useContext.select;

  const hasCheckbox = !!select;

  const onChange = () => select ? select.onSelectAll() : undefined;

  const headerColumns = columns && columns.map(_ref => {
    let id = _ref.id,
        column = _objectWithoutProperties(_ref, _excluded);

    return _react.default.createElement(_DataTableHeaderCell.DataTableHeaderCell, _extends({}, column, {
      columnId: id,
      key: id
    }));
  });
  return _react.default.createElement(_DataTableRow.DataTableRow, {
    checked: allSelected,
    id: (0, _useID.useID)(id),
    isHeaderRow: true,
    hasCheckbox: hasCheckbox,
    onChange: onChange
  }, headerColumns);
};

exports.DataTableHeader = DataTableHeader;
//# sourceMappingURL=DataTableHeader.js.map