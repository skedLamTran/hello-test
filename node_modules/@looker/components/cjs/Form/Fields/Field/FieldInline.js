"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldInline = void 0;

require("core-js/modules/es.symbol.description.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Label = require("../../Label/Label");

var _Text = require("../../../Text");

var _ValidationMessage = require("../../ValidationMessage/ValidationMessage");

var _Truncate = require("../../../Truncate");

var _RequiredStar = require("./RequiredStar");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const FieldInlineLayout = ({
  className,
  children,
  description,
  detail,
  label,
  id,
  required,
  validationMessage
}) => {
  const describedbyId = `describedby-${id}`;
  const inputWithAriaDescribed = (0, _react.isValidElement)(children) ? _react.default.cloneElement(children, {
    'aria-describedby': describedbyId
  }) : children;
  return _react.default.createElement("div", {
    className: className
  }, _react.default.createElement(InputArea, null, inputWithAriaDescribed), _react.default.createElement(_Label.Label, {
    htmlFor: id
  }, _react.default.createElement(_Truncate.Truncate, null, label), required && _react.default.createElement(_RequiredStar.RequiredStar, null)), detail && _react.default.createElement(FieldDetail, null, detail), _react.default.createElement(MessageArea, {
    id: describedbyId
  }, description && _react.default.createElement(FieldDescription, null, description), validationMessage && _react.default.createElement(_ValidationMessage.ValidationMessage, validationMessage)));
};

const FieldDetail = (0, _styledComponents.default)(_Text.Span).withConfig({
  displayName: "FieldInline__FieldDetail",
  componentId: "sc-1gab50g-0"
})(["color:", ";font-size:", ";grid-column:3;grid-row:1;-ms-grid-column:3;-ms-grid-column-span:2;-ms-grid-row:1;padding-left:", ";"], ({
  theme
}) => theme.colors.text2, ({
  theme
}) => theme.fontSizes.xsmall, ({
  theme
}) => theme.space.u2);
const FieldDescription = (0, _styledComponents.default)(_Text.Paragraph).withConfig({
  displayName: "FieldInline__FieldDescription",
  componentId: "sc-1gab50g-1"
})(["color:", ";font-size:", ";line-height:", ";padding-bottom:", ";padding-top:", ";"], ({
  theme
}) => theme.colors.text2, ({
  theme
}) => theme.fontSizes.xsmall, ({
  theme
}) => theme.lineHeights.xsmall, ({
  theme
}) => theme.space.u05, ({
  theme
}) => theme.space.u05);

const InputArea = _styledComponents.default.div.withConfig({
  displayName: "FieldInline__InputArea",
  componentId: "sc-1gab50g-2"
})(["grid-column:1;grid-row:1;padding-right:", ";-ms-grid-column:1;-ms-grid-column-span:1;-ms-grid-row:1;"], ({
  theme
}) => theme.space.u1);

const MessageArea = _styledComponents.default.div.withConfig({
  displayName: "FieldInline__MessageArea",
  componentId: "sc-1gab50g-3"
})(["grid-column:2;grid-column-end:span 2;grid-row:2;-ms-grid-column:2;-ms-grid-column-end:span 2;-ms-grid-column-span:2;-ms-grid-row:2;"]);

const FieldInline = (0, _styledComponents.default)(FieldInlineLayout).withConfig({
  displayName: "FieldInline",
  componentId: "sc-1gab50g-4"
})(["align-items:center;display:grid;grid-template-columns:auto auto auto auto;justify-content:start;line-height:", ";display:-ms-grid;-ms-grid-columns:auto auto auto auto;", "{align-items:center;color:", ";display:flex;font-size:", ";font-weight:normal;grid-column:2;grid-row:1;overflow:hidden;width:100%;-ms-grid-column:2;-ms-grid-column-span:1;-ms-grid-row:1;}"], ({
  theme
}) => theme.lineHeights.small, _Label.Label, ({
  theme,
  disabled
}) => disabled && theme.colors.text1, ({
  theme
}) => theme.fontSizes.small);
exports.FieldInline = FieldInline;
//# sourceMappingURL=FieldInline.js.map