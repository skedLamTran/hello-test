"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldToggleSwitch = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _utils = require("../../../utils");

var _Form = require("../../Form");

var _ToggleSwitch = require("../../Inputs/ToggleSwitch/ToggleSwitch");

var _Field = require("../Field");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const FieldToggleSwitchLayout = (0, _react.forwardRef)((props, ref) => {
  const validationMessage = (0, _Form.useFormContext)(props);
  const id = (0, _utils.useID)(props.id);
  return _react.default.createElement(_Field.FieldInline, _extends({}, (0, _Field.pickFieldProps)(props), {
    validationMessage: validationMessage,
    id: id
  }), _react.default.createElement(_ToggleSwitch.ToggleSwitch, _extends({}, (0, _Field.omitFieldProps)(props), {
    "aria-describedby": `describedby-${id}`,
    id: id,
    validationType: validationMessage && validationMessage.type,
    ref: ref,
    mr: "u1"
  })));
});
FieldToggleSwitchLayout.displayName = 'FieldToggleSwitchLayout';
const FieldToggleSwitch = (0, _styledComponents.default)(FieldToggleSwitchLayout).withConfig({
  displayName: "FieldToggleSwitch",
  componentId: "sc-22i885-0"
})([""]);
exports.FieldToggleSwitch = FieldToggleSwitch;
//# sourceMappingURL=FieldToggleSwitch.js.map