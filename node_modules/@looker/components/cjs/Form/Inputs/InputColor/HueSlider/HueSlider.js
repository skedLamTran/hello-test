"use strict";

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HueSlider = exports.HueSliderLayout = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _utils = require("../../../../utils");

var _utils2 = require("../utils");

var _Handle = require("../Handle");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const HueSliderLayout = ({
  className,
  hsv,
  setHsv,
  width
}) => {
  var _sliderRef$current;

  const handlePosition = hsv.h / 360 * width;
  const sliderRef = (0, _react.useRef)(null);
  const sliderLeft = ((_sliderRef$current = sliderRef.current) === null || _sliderRef$current === void 0 ? void 0 : _sliderRef$current.getBoundingClientRect().left) || 0;

  const handleSliderClick = event => {
    const clickEventX = event.clientX;
    const newHue = (clickEventX - sliderLeft) / width * 360;
    setHsv(_objectSpread(_objectSpread({}, hsv), {}, {
      h: newHue
    }));
  };

  const _useMouseDragPosition = (0, _utils.useMouseDragPosition)(sliderRef.current),
        isMouseDown = _useMouseDragPosition.isMouseDown,
        mousePos = _useMouseDragPosition.mousePos;

  const previousIsMouseDown = (0, _utils.usePreviousValue)(isMouseDown);

  const handleHandleDrag = () => {
    let newHue = (mousePos.x - sliderLeft) / width * 360;

    if (newHue > 360) {
      newHue = 360;
    } else if (newHue < 0) {
      newHue = 0;
    }

    setHsv(_objectSpread(_objectSpread({}, hsv), {}, {
      h: newHue
    }));
  };

  (0, _react.useEffect)(() => {
    if (isMouseDown && previousIsMouseDown) {
      handleHandleDrag();
    }
  }, [mousePos]);
  const sliderHandleColor = (0, _utils2.simpleHsvToHex)(_objectSpread(_objectSpread({}, hsv), {}, {
    s: 1,
    v: 1
  }));
  return _react.default.createElement(HueSliderTrack, {
    className: className,
    isMouseDown: isMouseDown,
    onMouseDown: handleSliderClick,
    ref: sliderRef,
    width: width
  }, _react.default.createElement(_Handle.Handle, {
    color: sliderHandleColor,
    isMouseDown: isMouseDown,
    x: handlePosition
  }));
};

exports.HueSliderLayout = HueSliderLayout;

const HueSliderTrack = _styledComponents.default.div.withConfig({
  displayName: "HueSlider__HueSliderTrack",
  componentId: "sc-10igbq6-0"
})(["background:linear-gradient( 90deg,#f00 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,#f00 );border-radius:", ";cursor:", ";height:", ";width:", "px;"], ({
  theme
}) => theme.radii.large, ({
  isMouseDown
}) => isMouseDown ? 'grabbing' : 'default', ({
  theme
}) => theme.space.u3, ({
  width
}) => width);

const HueSlider = (0, _styledComponents.default)(HueSliderLayout).withConfig({
  displayName: "HueSlider",
  componentId: "sc-10igbq6-1"
})([""]);
exports.HueSlider = HueSlider;
//# sourceMappingURL=HueSlider.js.map