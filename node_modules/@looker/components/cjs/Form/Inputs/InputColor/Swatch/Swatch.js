"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Swatch = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const emptySwatch = (0, _styledComponents.css)(["position:relative;&::after{background:red;content:'';display:block;height:1px;position:absolute;top:50%;transform:rotate(-45deg);width:100%;}"]);

const Swatch = _styledComponents.default.div.withConfig({
  shouldForwardProp: _designTokens.shouldForwardProp
}).attrs(({
  color = 'transparent',
  size = 'xsmall'
}) => ({
  color,
  'data-testid': 'swatch',
  size
})).withConfig({
  displayName: "Swatch",
  componentId: "sc-1ldlx27-0"
})(["", " ", " ", " background-color:", ";border:1px solid ", ";border-radius:50%;cursor:", ";", " &:hover{border:1px solid ", ";}"], _designTokens.reset, _designTokens.size, _designTokens.space, ({
  color
}) => color, ({
  theme: {
    colors
  }
}) => colors.ui3, ({
  disabled
}) => !disabled && 'pointer', ({
  color
}) => color === 'transparent' && emptySwatch, ({
  theme: {
    colors
  }
}) => colors.ui4);

exports.Swatch = Swatch;
//# sourceMappingURL=Swatch.js.map