"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Accordion2Disclosure = void 0;

require("core-js/modules/es.array.includes.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

var _utils = require("../utils");

var _AccordionLabel = require("./AccordionLabel");

const _excluded = ["children", "indicator", "indicatorPosition"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const Accordion2DisclosureInternal = (0, _react.forwardRef)((_ref, ref) => {
  let children = _ref.children,
      indicator = _ref.indicator,
      indicatorPosition = _ref.indicatorPosition,
      props = _objectWithoutProperties(_ref, _excluded);

  return _react.default.createElement("div", _extends({
    ref: ref
  }, props), indicatorPosition === 'left' && indicator, _react.default.createElement(_AccordionLabel.AccordionLabel, null, children), indicatorPosition !== 'left' && indicator);
});
Accordion2DisclosureInternal.displayName = 'Accordion2DisclosureInternal';
const labelTypographyDefaults = (0, _styledComponents.css)(["font-weight:", ";text-align:left;"], ({
  theme
}) => theme.fontWeights.semiBold);
const Accordion2Disclosure = (0, _styledComponents.default)(Accordion2DisclosureInternal).withConfig({
  shouldForwardProp: prop => ['indicator', 'indicatorPosition'].includes(prop) ? true : (0, _designTokens.shouldForwardProp)(prop)
}).withConfig({
  displayName: "Accordion2Disclosure",
  componentId: "sc-n100ke-0"
})(["align-items:center;color:", ";cursor:pointer;display:flex;outline:none;position:relative;width:100%;", " &[disabled]{color:", ";cursor:not-allowed;}", ""], ({
  theme
}) => theme.colors.text5, labelTypographyDefaults, ({
  theme
}) => theme.colors.text1, (0, _utils.focusVisibleCSSWrapper)(({
  theme
}) => (0, _styledComponents.css)(["box-shadow:inset 0 0 0 2px ", ";"], theme.colors.keyFocus)));
exports.Accordion2Disclosure = Accordion2Disclosure;
//# sourceMappingURL=Accordion2Disclosure.js.map