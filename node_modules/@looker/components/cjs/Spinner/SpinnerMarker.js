"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpinnerMarker = void 0;

var _designTokens = require("@looker/design-tokens");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const markerStyle = props => {
  const markerIndex = props.markerIndex,
        markerRadius = props.markerRadius,
        markers = props.markers,
        speed = props.speed;
  const delay = markerIndex * speed / markers;
  const rotateAngle = 360 / markers * markerIndex;
  return (0, _styledComponents.css)(["animation:", " ", "ms linear ", "ms infinite;border-radius:", ";transform:rotate(", "deg) translate(0,-160%);"], _designTokens.quarterFade, speed, delay, markerRadius && `${markerRadius}px`, rotateAngle);
};

const SpinnerMarker = _styledComponents.default.div.withConfig({
  shouldForwardProp: _designTokens.shouldForwardProp
}).withConfig({
  displayName: "SpinnerMarker",
  componentId: "sc-ddzia7-0"
})(["", " ", " height:20%;left:48%;opacity:0.25;position:absolute;top:40%;width:6%;"], _designTokens.color, markerStyle);

exports.SpinnerMarker = SpinnerMarker;
//# sourceMappingURL=SpinnerMarker.js.map