"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipSurface = exports.invertSurface = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _OverlaySurface = require("../Overlay/OverlaySurface");

var _Link = require("../Link");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const invertSurface = props => props.invert !== false && (0, _styledComponents.css)(["", "{background:", ";border-color:", ";color:", ";}", "{color:", ";&:focus,&:hover,&:active,&.active,&:visited{color:", ";}}"], _OverlaySurface.OverlaySurfaceContentArea, ({
  theme
}) => theme.colors.inverse, ({
  theme
}) => theme.colors.inverse, ({
  theme
}) => theme.colors.inverseOn, _Link.Link, ({
  theme
}) => theme.colors.keyAccent, ({
  theme
}) => theme.colors.keySubtle);

exports.invertSurface = invertSurface;
const TooltipSurface = (0, _styledComponents.default)(_OverlaySurface.OverlaySurface).withConfig({
  displayName: "TooltipSurface",
  componentId: "sc-ym8ur1-0"
})(["", " &.exited,&.exiting,&.entering{animation:none;opacity:0;pointer-events:none;}"], invertSurface);
exports.TooltipSurface = TooltipSurface;
//# sourceMappingURL=TooltipSurface.js.map