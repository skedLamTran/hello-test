"use strict";

require("core-js/modules/es.array.index-of.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AvatarIcon = void 0;

var _react = _interopRequireDefault(require("react"));

var _designTokens = require("@looker/design-tokens");

var _PersonOutline = require("@styled-icons/material/PersonOutline");

var _styledIcon = require("@styled-icons/styled-icon");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Avatar = require("./Avatar");

const _excluded = ["color", "icon", "role"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const size = (0, _designTokens.variant)({
  prop: 'size',
  variants: {
    xxsmall: {
      height: '16px',
      width: '16px'
    },
    xsmall: {
      height: '20px',
      width: '20px'
    },
    small: {
      height: '20px',
      width: '20px'
    },
    medium: {
      height: '30px',
      width: '30px'
    },
    large: {
      height: '36px',
      width: '36px'
    }
  }
});

const AvatarLayout = _ref => {
  let color = _ref.color,
      _ref$icon = _ref.icon,
      icon = _ref$icon === void 0 ? _react.default.createElement(_PersonOutline.PersonOutline, null) : _ref$icon,
      role = _ref.role,
      props = _objectWithoutProperties(_ref, _excluded);

  const BaseElement = role === 'button' ? 'button' : 'div';
  return _react.default.createElement(BaseElement, (0, _designTokens.omitStyledProps)(props), icon);
};

const AvatarIcon = (0, _styledComponents.default)(AvatarLayout).attrs(({
  bg = 'background',
  color = 'keyFocus',
  size = 'small'
}) => ({
  bg,
  color,
  size
})).withConfig({
  displayName: "AvatarIcon",
  componentId: "sc-18uvd0-0"
})(["", " ", " border:solid 1px currentColor;", "{", "}"], _Avatar.avatarCSS, ({
  role
}) => role === 'button' && 'cursor: pointer;', _styledIcon.StyledIconBase, size);
exports.AvatarIcon = AvatarIcon;
//# sourceMappingURL=AvatarIcon.js.map