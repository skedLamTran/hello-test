"use strict";

require("core-js/modules/es.array.index-of.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CodeBlock = void 0;

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _TextBase = require("./TextBase");

const _excluded = ["children", "className"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const CodeBlockLayout = _ref => {
  let children = _ref.children,
      className = _ref.className,
      props = _objectWithoutProperties(_ref, _excluded);

  return _react.default.createElement(_TextBase.TextBase, _extends({
    className: className,
    as: "pre",
    fontFamily: "code"
  }, props), _react.default.createElement("code", null, children));
};

const CodeBlock = (0, _styledComponents.default)(CodeBlockLayout).attrs(({
  border = '1px solid',
  borderColor = 'ui2',
  fontSize = 'small',
  p = 'medium'
}) => ({
  border,
  borderColor,
  fontSize,
  p
})).withConfig({
  displayName: "CodeBlock",
  componentId: "sc-yes8xf-0"
})(["", " color:", ";overflow-y:auto;code{font-family:inherit;}"], _designTokens.border, ({
  theme
}) => theme.colors.text);
exports.CodeBlock = CodeBlock;
//# sourceMappingURL=CodeBlock.js.map