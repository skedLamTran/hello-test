"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuItem = void 0;

var _pick = _interopRequireDefault(require("lodash/pick"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _react = _interopRequireWildcard(require("react"));

var _designTokens = require("@looker/design-tokens");

var _ArrowRight = require("@styled-icons/material/ArrowRight");

var _Dialog = require("../Dialog");

var _ListItem = require("../ListItem");

var _utils = require("../utils");

var _Ripple = require("../Ripple");

var _NestedMenuProvider = require("./NestedMenuProvider");

var _useNestedMenu2 = require("./useNestedMenu");

const _excluded = ["className", "children", "detail", "onClick", "onKeyDown", "onMouseEnter", "onMouseLeave", "nestedMenu", "style"],
      _excluded2 = ["onClick", "ref"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const MenuItem = (0, _styledComponents.default)((0, _react.forwardRef)((_ref, forwardedRef) => {
  let className = _ref.className,
      children = _ref.children,
      detail = _ref.detail,
      onClick = _ref.onClick,
      onKeyDown = _ref.onKeyDown,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      nestedMenu = _ref.nestedMenu,
      style = _ref.style,
      props = _objectWithoutProperties(_ref, _excluded);

  const id = (0, _utils.useID)(props.id);

  const _useNestedMenu = (0, _useNestedMenu2.useNestedMenu)({
    id,
    nestedMenu,
    onClick,
    onKeyDown,
    onMouseEnter,
    onMouseLeave
  }),
        popover = _useNestedMenu.popover,
        _useNestedMenu$domPro = _useNestedMenu.domProps,
        nestedMenuOnClick = _useNestedMenu$domPro.onClick,
        nestedMenuRef = _useNestedMenu$domPro.ref,
        nestedMenuProps = _objectWithoutProperties(_useNestedMenu$domPro, _excluded2);

  const _useCallbackRef = (0, _utils.useCallbackRef)(forwardedRef),
        _useCallbackRef2 = _slicedToArray(_useCallbackRef, 2),
        element = _useCallbackRef2[0],
        internalRef = _useCallbackRef2[1];

  const _useMeasuredElement = (0, _utils.useMeasuredElement)(element),
        _useMeasuredElement2 = _slicedToArray(_useMeasuredElement, 1),
        _useMeasuredElement2$ = _useMeasuredElement2[0],
        height = _useMeasuredElement2$.height,
        width = _useMeasuredElement2$.width;

  const _useRipple = (0, _Ripple.useRipple)({
    bounded: true,
    color: 'neutral',
    height,
    width
  }),
        callbacks = _useRipple.callbacks,
        rippleClassName = _useRipple.className,
        rippleStyle = _useRipple.style;

  const rippleHandlers = (0, _Ripple.useRippleHandlers)(callbacks, _objectSpread({}, (0, _pick.default)(_objectSpread(_objectSpread({}, props), nestedMenuProps), _Ripple.rippleHandlerKeys)), props.disabled);
  const ref = (0, _utils.useForkedRef)(nestedMenuRef, internalRef);
  const theme = (0, _react.useContext)(_styledComponents.ThemeContext);

  const _useContext = (0, _react.useContext)(_ListItem.ListItemContext),
        density = _useContext.density;

  const _listItemDimensions = (0, _ListItem.listItemDimensions)(density || theme.defaults.density),
        iconSize = _listItemDimensions.iconSize;

  if (detail && nestedMenu) {
    console.warn('The detail prop is not supported when nestedMenu is used.');
  }

  detail = nestedMenu ? _react.default.createElement(NestedMenuIndicator, {
    size: iconSize
  }) : detail;

  const _useContext2 = (0, _react.useContext)(_Dialog.DialogContext),
        closeModal = _useContext2.closeModal;

  const _useContext3 = (0, _react.useContext)(_NestedMenuProvider.NestedMenuContext),
        closeParentMenu = _useContext3.closeParentMenu;

  const handleOnClick = event => {
    nestedMenuOnClick(event);

    if (!event.defaultPrevented) {
      closeModal === null || closeModal === void 0 ? void 0 : closeModal();
      closeParentMenu === null || closeParentMenu === void 0 ? void 0 : closeParentMenu();
    }
  };

  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_ListItem.ListItem, _extends({
    className: (0, _utils.mergeClassNames)([className, rippleClassName]),
    detail: detail,
    onClick: handleOnClick,
    ref: ref,
    role: "menuitem",
    style: _objectSpread(_objectSpread({}, style), rippleStyle)
  }, nestedMenuProps, props, rippleHandlers), children), popover);
})).withConfig({
  displayName: "MenuItem",
  componentId: "sc-13x060p-0"
})(["", " [aria-expanded='true']{background:", ";}"], _Ripple.rippleStyle, ({
  theme: {
    colors
  }
}) => colors.ui1);
exports.MenuItem = MenuItem;
const NestedMenuIndicator = (0, _styledComponents.default)(_ArrowRight.ArrowRight).withConfig({
  shouldForwardProp: _designTokens.shouldForwardProp
}).withConfig({
  displayName: "MenuItem__NestedMenuIndicator",
  componentId: "sc-13x060p-1"
})(["color:", ";", ""], ({
  theme
}) => theme.colors.text1, _designTokens.size);
//# sourceMappingURL=MenuItem.js.map