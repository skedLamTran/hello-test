"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useWindow = void 0;

var _react = _interopRequireWildcard(require("react"));

var _getWindowedListBoundaries = require("./getWindowedListBoundaries");

var _useCallbackRef3 = require("./useCallbackRef");

var _useMeasuredElement3 = require("./useMeasuredElement");

var _useScrollPosition = require("./useScrollPosition");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const useWindow = ({
  itemCount,
  enabled,
  itemHeight,
  ref,
  spacerTag = 'div'
}) => {
  const _useCallbackRef = (0, _useCallbackRef3.useCallbackRef)(ref),
        _useCallbackRef2 = _slicedToArray(_useCallbackRef, 2),
        containerElement = _useCallbackRef2[0],
        callbackRef = _useCallbackRef2[1];

  const _useMeasuredElement = (0, _useMeasuredElement3.useMeasuredElement)(enabled ? containerElement : null),
        _useMeasuredElement2 = _slicedToArray(_useMeasuredElement, 1),
        height = _useMeasuredElement2[0].height;

  const scrollPosition = (0, _useScrollPosition.useScrollPosition)(enabled ? containerElement : null);

  const _useMemo = (0, _react.useMemo)(() => {
    return (0, _getWindowedListBoundaries.getWindowedListBoundaries)({
      enabled,
      height,
      itemCount,
      itemHeight,
      scrollPosition
    });
  }, [enabled, itemCount, height, itemHeight, scrollPosition]),
        start = _useMemo.start,
        end = _useMemo.end,
        beforeHeight = _useMemo.beforeHeight,
        afterHeight = _useMemo.afterHeight;

  const Spacer = spacerTag;
  const before = beforeHeight > 0 ? _react.default.createElement(Spacer, {
    style: {
      height: `${beforeHeight}px`
    },
    "data-testid": "before"
  }) : null;
  const after = afterHeight > 0 ? _react.default.createElement(Spacer, {
    style: {
      height: `${afterHeight}px`
    },
    "data-testid": "after"
  }) : null;
  return {
    after,
    before,
    containerElement,
    end,
    ref: callbackRef,
    start
  };
};

exports.useWindow = useWindow;
//# sourceMappingURL=useWindow.js.map