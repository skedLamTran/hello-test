import type { ReactNode } from 'react';
export declare type PanelDirection = 'left' | 'right';
export declare type PanelRenderProp = (props: UsePanelResponseDom) => ReactNode;
export interface PanelProps extends UsePanelProps {
    children?: PanelRenderProp | ReactNode;
}
export declare type PanelSurfaceProps = {
    direction?: PanelDirection;
};
export declare type UsePanelResponse = {
    isOpen: boolean;
    setOpen: (open: boolean) => void;
    panel: ReactNode;
    domProps: UsePanelResponseDom;
};
export declare type PanelBaseProps = {
    closeLabel?: string;
    iconToggle?: boolean;
    onClose?: () => void;
    title: string;
    disableAnimation?: boolean;
};
export declare type UsePanelProps = PanelBaseProps & {
    canClose?: () => boolean;
    content: ReactNode;
    defaultOpen?: boolean;
    direction?: PanelDirection;
    setOpen?: (open: boolean) => void;
    isOpen?: boolean;
    onAfterClose?: () => void;
    onAfterOpen?: () => void;
};
export interface UsePanelResponseDom {
    onClick: () => void;
    role: string;
    'aria-expanded': boolean;
}
