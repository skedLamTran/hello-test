import "regenerator-runtime/runtime.js";
import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";
import "core-js/modules/es.object.to-string.js";
import "core-js/modules/es.promise.js";

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import i18next from 'i18next';
import enDate from 'date-fns/locale/en-US';
import { initReactI18next } from 'react-i18next';
import { i18nInitOptions, i18nUpdate } from './i18nInit';
export var i18nInitOptionsComponents = _objectSpread(_objectSpread({}, i18nInitOptions), {}, {
  react: {
    useSuspense: false
  }
});
var dateLocale = enDate;

var setDateLocale = function setDateLocale(_dateLocale) {
  if (_dateLocale) {
    dateLocale = _dateLocale;
  }
};

export var getDateLocale = function getDateLocale() {
  return dateLocale;
};
export function i18nInitComponents(_x) {
  return _i18nInitComponents.apply(this, arguments);
}

function _i18nInitComponents() {
  _i18nInitComponents = _asyncToGenerator(regeneratorRuntime.mark(function _callee(_ref) {
    var locale, resources, dateLocale;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            locale = _ref.locale, resources = _ref.resources, dateLocale = _ref.dateLocale;
            setDateLocale(dateLocale);

            if (!i18next.isInitialized) {
              _context.next = 7;
              break;
            }

            i18nUpdate({
              locale: locale,
              resources: resources
            });
            return _context.abrupt("return", i18next);

          case 7:
            return _context.abrupt("return", i18next.use(initReactI18next).init(_objectSpread(_objectSpread({}, i18nInitOptionsComponents), {}, {
              lng: locale,
              resources: resources
            })));

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _i18nInitComponents.apply(this, arguments);
}
//# sourceMappingURL=i18nInitComponents.js.map