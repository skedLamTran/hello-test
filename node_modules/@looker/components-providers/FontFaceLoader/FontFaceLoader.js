import "core-js/modules/es.array.join.js";
import "core-js/modules/es.array.map.js";
import "core-js/modules/es.array.concat.js";
import React, { useContext, useMemo } from 'react';
import { Helmet } from 'react-helmet-async';
import { ThemeContext } from 'styled-components';
export var fontFacesCSS = function fontFacesCSS(fontSources) {
  return fontSources.map(function (_ref) {
    var face = _ref.face,
        url = _ref.url;
    return face ? fontFace(face, url) : importFont(url);
  }).join('\n');
};
export var importFont = function importFont(url) {
  return "\n@import url(".concat(url, ");");
};
export var fontFace = function fontFace(face, url) {
  return "\n@font-face {\n  font-family: ".concat(face, ";\n  src: url('").concat(url, "');\n}");
};
export var FontFaceLoader = function FontFaceLoader() {
  var _useContext = useContext(ThemeContext),
      fontSources = _useContext.fontSources;

  var css = useMemo(function () {
    if (fontSources && fontSources.length > 0) {
      return fontFacesCSS(fontSources);
    } else {
      return null;
    }
  }, [fontSources]);
  return css === null ? null : React.createElement(Helmet, null, React.createElement("style", {
    type: "text/css"
  }, css));
};
//# sourceMappingURL=FontFaceLoader.js.map